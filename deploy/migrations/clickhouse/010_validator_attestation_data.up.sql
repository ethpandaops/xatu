CREATE TABLE beacon_api_eth_v1_validator_attestation_data_local on cluster '{cluster}' (
  event_date_time DateTime64(3) Codec(DoubleDelta, ZSTD(1)),
  slot UInt32 Codec(DoubleDelta, ZSTD(1)),
  slot_start_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
  committee_index LowCardinality(String),
  beacon_block_root FixedString(66) Codec(ZSTD(1)),
  epoch UInt32 Codec(DoubleDelta, ZSTD(1)),
  epoch_start_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
  source_epoch UInt32 Codec(DoubleDelta, ZSTD(1)),
  source_epoch_start_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
  source_root FixedString(66) Codec(ZSTD(1)),
  target_epoch UInt32 Codec(DoubleDelta, ZSTD(1)),
  target_epoch_start_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
  target_root FixedString(66) Codec(ZSTD(1)),
  request_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
  request_duration UInt32 Codec(ZSTD(1)),
  request_slot_start_diff UInt32 Codec(ZSTD(1)),
  meta_client_name LowCardinality(String),
  meta_client_id String Codec(ZSTD(1)),
  meta_client_version LowCardinality(String),
  meta_client_implementation LowCardinality(String),
  meta_client_os LowCardinality(String),
  meta_client_ip Nullable(IPv6) Codec(ZSTD(1)),
  meta_client_geo_city LowCardinality(String) Codec(ZSTD(1)),
  meta_client_geo_country LowCardinality(String) Codec(ZSTD(1)),
  meta_client_geo_country_code LowCardinality(String) Codec(ZSTD(1)),
  meta_client_geo_continent_code LowCardinality(String) Codec(ZSTD(1)),
  meta_client_geo_longitude Nullable(Float64) Codec(ZSTD(1)),
  meta_client_geo_latitude Nullable(Float64) Codec(ZSTD(1)),
  meta_client_geo_autonomous_system_number Nullable(UInt32) Codec(ZSTD(1)),
  meta_client_geo_autonomous_system_organization Nullable(String) Codec(ZSTD(1)),
  meta_network_id Int32 Codec(DoubleDelta, ZSTD(1)),
  meta_network_name LowCardinality(String),
  meta_consensus_version LowCardinality(String),
  meta_consensus_version_major LowCardinality(String),
  meta_consensus_version_minor LowCardinality(String),
  meta_consensus_version_patch LowCardinality(String),
  meta_consensus_implementation LowCardinality(String),
  meta_labels Map(String, String) Codec(ZSTD(1))
) Engine = ReplicatedMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}')
PARTITION BY toStartOfMonth(slot_start_date_time)
ORDER BY (slot_start_date_time, meta_network_name, meta_client_name)
TTL slot_start_date_time TO VOLUME 'default',
    slot_start_date_time + INTERVAL 3 MONTH DELETE WHERE meta_network_name != 'mainnet',
    slot_start_date_time + INTERVAL 6 MONTH TO VOLUME 'hdd1',
    slot_start_date_time + INTERVAL 18 MONTH TO VOLUME 'hdd2',
    slot_start_date_time + INTERVAL 40 MONTH DELETE WHERE meta_network_name = 'mainnet';

ALTER TABLE default.beacon_api_eth_v1_validator_attestation_data_local ON CLUSTER '{cluster}'
MODIFY COMMENT 'Contains beacon API validator attestation data from each sentry client attached to a beacon node.',
COMMENT COLUMN event_date_time 'When the sentry received the event from a beacon node',
COMMENT COLUMN slot 'Slot number in the beacon API validator attestation data payload',
COMMENT COLUMN slot_start_date_time 'The wall clock time when the slot started',
COMMENT COLUMN committee_index 'The committee index in the beacon API validator attestation data payload',
COMMENT COLUMN beacon_block_root 'The beacon block root hash in the beacon API validator attestation data payload',
COMMENT COLUMN epoch 'The epoch number in the beacon API validator attestation data payload',
COMMENT COLUMN epoch_start_date_time 'The wall clock time when the epoch started',
COMMENT COLUMN source_epoch 'The source epoch number in the beacon API validator attestation data payload',
COMMENT COLUMN source_epoch_start_date_time 'The wall clock time when the source epoch started',
COMMENT COLUMN source_root 'The source beacon block root hash in the beacon API validator attestation data payload',
COMMENT COLUMN target_epoch 'The target epoch number in the beacon API validator attestation data payload',
COMMENT COLUMN target_epoch_start_date_time 'The wall clock time when the target epoch started',
COMMENT COLUMN target_root 'The target beacon block root hash in the beacon API validator attestation data payload',
COMMENT COLUMN request_date_time 'When the request was sent to the beacon node',
COMMENT COLUMN request_duration 'The request duration in milliseconds',
COMMENT COLUMN request_slot_start_diff 'The difference between the request_date_time and the slot_start_date_time',
COMMENT COLUMN meta_client_name 'Name of the client that generated the event',
COMMENT COLUMN meta_client_id 'Unique Session ID of the client that generated the event. This changes every time the client is restarted.',
COMMENT COLUMN meta_client_version 'Version of the client that generated the event',
COMMENT COLUMN meta_client_implementation 'Implementation of the client that generated the event',
COMMENT COLUMN meta_client_os 'Operating system of the client that generated the event',
COMMENT COLUMN meta_client_ip 'IP address of the client that generated the event',
COMMENT COLUMN meta_client_geo_city 'City of the client that generated the event',
COMMENT COLUMN meta_client_geo_country 'Country of the client that generated the event',
COMMENT COLUMN meta_client_geo_country_code 'Country code of the client that generated the event',
COMMENT COLUMN meta_client_geo_continent_code 'Continent code of the client that generated the event',
COMMENT COLUMN meta_client_geo_longitude 'Longitude of the client that generated the event',
COMMENT COLUMN meta_client_geo_latitude 'Latitude of the client that generated the event',
COMMENT COLUMN meta_client_geo_autonomous_system_number 'Autonomous system number of the client that generated the event',
COMMENT COLUMN meta_client_geo_autonomous_system_organization 'Autonomous system organization of the client that generated the event',
COMMENT COLUMN meta_network_id 'Ethereum network ID',
COMMENT COLUMN meta_network_name 'Ethereum network name',
COMMENT COLUMN meta_consensus_version 'Ethereum consensus client version that generated the event',
COMMENT COLUMN meta_consensus_version_major 'Ethereum consensus client major version that generated the event',
COMMENT COLUMN meta_consensus_version_minor 'Ethereum consensus client minor version that generated the event',
COMMENT COLUMN meta_consensus_version_patch 'Ethereum consensus client patch version that generated the event',
COMMENT COLUMN meta_consensus_implementation 'Ethereum consensus client implementation that generated the event',
COMMENT COLUMN meta_labels 'Labels associated with the event';

CREATE TABLE beacon_api_eth_v1_validator_attestation_data on cluster '{cluster}' AS beacon_api_eth_v1_validator_attestation_data_local
ENGINE = Distributed('{cluster}', default, beacon_api_eth_v1_validator_attestation_data_local, rand());
