CREATE TABLE default.beacon_block_classification_local on cluster '{cluster}'
(
    updated_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    event_date_time DateTime64(3) CODEC(DoubleDelta, ZSTD(1)),
    slot UInt32 CODEC(DoubleDelta, ZSTD(1)),
    slot_start_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    epoch UInt32 CODEC(DoubleDelta, ZSTD(1)),
    epoch_start_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    best_guess_single LowCardinality(String),
    best_guess_multi LowCardinality(String),
    client_probability_uncertain Float32 CODEC(ZSTD(1)),
    client_probability_prysm Float32 CODEC(ZSTD(1)),
    client_probability_teku Float32 CODEC(ZSTD(1)),
    client_probability_nimbus Float32 CODEC(ZSTD(1)),
    client_probability_lodestar Float32 CODEC(ZSTD(1)),
    client_probability_grandine Float32 CODEC(ZSTD(1)),
    client_probability_lighthouse Float32 CODEC(ZSTD(1)),
    proposer_index UInt32 CODEC(ZSTD(1)),
    meta_client_name LowCardinality(String),
    meta_client_id String CODEC(ZSTD(1)),
    meta_client_version LowCardinality(String),
    meta_client_implementation LowCardinality(String),
    meta_client_os LowCardinality(String),
    meta_client_ip Nullable(IPv6) CODEC(ZSTD(1)),
    meta_client_geo_city LowCardinality(String) CODEC(ZSTD(1)),
    meta_client_geo_country LowCardinality(String) CODEC(ZSTD(1)),
    meta_client_geo_country_code LowCardinality(String) CODEC(ZSTD(1)),
    meta_client_geo_continent_code LowCardinality(String)  CODEC(ZSTD(1)),
    meta_client_geo_longitude Nullable(Float64)  CODEC(ZSTD(1)),
    meta_client_geo_latitude Nullable(Float64) CODEC(ZSTD(1)),
    meta_client_geo_autonomous_system_number Nullable(UInt32) CODEC(ZSTD(1)),
    meta_client_geo_autonomous_system_organization Nullable(String) CODEC(ZSTD(1)),
    meta_network_id Int32 CODEC(DoubleDelta, ZSTD(1)),
    meta_network_name LowCardinality(String),
    meta_consensus_version LowCardinality(String),
    meta_consensus_version_major LowCardinality(String),
    meta_consensus_version_minor LowCardinality(String),
    meta_consensus_version_patch LowCardinality(String),
    meta_consensus_implementation LowCardinality(String),
    meta_labels Map(String, String) CODEC(ZSTD(1))
) Engine = ReplicatedReplacingMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}', updated_date_time)
PARTITION BY toStartOfMonth(slot_start_date_time)
ORDER BY (slot_start_date_time, meta_network_name);

ALTER TABLE default.beacon_block_classification_local ON CLUSTER '{cluster}'
MODIFY COMMENT 'Contains beacon block classification for a given slot. This is a best guess based on the client probabilities of the proposer. This is not guaranteed to be correct.',
COMMENT COLUMN updated_date_time 'When this row was last updated',
COMMENT COLUMN event_date_time 'When the client fetched the beacon block classification',
COMMENT COLUMN slot 'The slot number from beacon block classification',
COMMENT COLUMN slot_start_date_time 'The wall clock time when the slot started',
COMMENT COLUMN epoch 'The epoch number from beacon block classification',
COMMENT COLUMN epoch_start_date_time 'The wall clock time when the epoch started',
COMMENT COLUMN best_guess_single 'The best guess of the client that generated the beacon block',
COMMENT COLUMN best_guess_multi 'The best guess of the clients that generated the beacon block. This value will typically equal the best_guess_single value, but when multiple clients have high probabilities, this value will have multiple eg. "prysm or lighthouse"',
COMMENT COLUMN client_probability_uncertain 'The probability that the client that generated the beacon block is uncertain',
COMMENT COLUMN client_probability_prysm 'The probability that the client that generated the beacon block is Prysm',
COMMENT COLUMN client_probability_teku 'The probability that the client that generated the beacon block is Teku',
COMMENT COLUMN client_probability_nimbus 'The probability that the client that generated the beacon block is Nimbus',
COMMENT COLUMN client_probability_lodestar 'The probability that the client that generated the beacon block is Lodestar',
COMMENT COLUMN client_probability_grandine 'The probability that the client that generated the beacon block is Grandine',
COMMENT COLUMN client_probability_lighthouse 'The probability that the client that generated the beacon block is Lighthouse',
COMMENT COLUMN proposer_index 'The index of the validator that proposed the beacon block',
COMMENT COLUMN meta_client_name 'Name of the client that generated the event',
COMMENT COLUMN meta_client_id 'Unique Session ID of the client that generated the event. This changes every time the client is restarted.',
COMMENT COLUMN meta_client_version 'Version of the client that generated the event',
COMMENT COLUMN meta_client_implementation 'Implementation of the client that generated the event',
COMMENT COLUMN meta_client_os 'Operating system of the client that generated the event',
COMMENT COLUMN meta_client_ip 'IP address of the client that generated the event',
COMMENT COLUMN meta_client_geo_city 'City of the client that generated the event',
COMMENT COLUMN meta_client_geo_country 'Country of the client that generated the event',
COMMENT COLUMN meta_client_geo_country_code 'Country code of the client that generated the event',
COMMENT COLUMN meta_client_geo_continent_code 'Continent code of the client that generated the event',
COMMENT COLUMN meta_client_geo_longitude 'Longitude of the client that generated the event',
COMMENT COLUMN meta_client_geo_latitude 'Latitude of the client that generated the event',
COMMENT COLUMN meta_client_geo_autonomous_system_number 'Autonomous system number of the client that generated the event',
COMMENT COLUMN meta_client_geo_autonomous_system_organization 'Autonomous system organization of the client that generated the event',
COMMENT COLUMN meta_network_id 'Ethereum network ID',
COMMENT COLUMN meta_network_name 'Ethereum network name',
COMMENT COLUMN meta_consensus_version 'Ethereum consensus client version that generated the event',
COMMENT COLUMN meta_consensus_version_major 'Ethereum consensus client major version that generated the event',
COMMENT COLUMN meta_consensus_version_minor 'Ethereum consensus client minor version that generated the event',
COMMENT COLUMN meta_consensus_version_patch 'Ethereum consensus client patch version that generated the event',
COMMENT COLUMN meta_consensus_implementation 'Ethereum consensus client implementation that generated the event',
COMMENT COLUMN meta_labels 'Labels associated with the event';

CREATE TABLE beacon_block_classification on cluster '{cluster}' AS beacon_block_classification_local
ENGINE = Distributed('{cluster}', default, beacon_block_classification_local, rand());
