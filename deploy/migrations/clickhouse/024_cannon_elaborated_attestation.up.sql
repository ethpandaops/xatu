CREATE TABLE default.canonical_beacon_elaborated_attestation_local on cluster '{cluster}'
(
    unique_key Int64,
    updated_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    event_date_time DateTime64(3) CODEC(DoubleDelta, ZSTD(1)),
    block_slot UInt32 CODEC(DoubleDelta, ZSTD(1)),
    block_slot_start_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    block_epoch UInt32 CODEC(DoubleDelta, ZSTD(1)),
    block_epoch_start_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    position_in_block  UInt32 Codec(DoubleDelta, ZSTD(1)),
    block_root FixedString(66) CODEC(ZSTD(1)),
    validators Array(UInt32) Codec(ZSTD(1)),
    committee_index LowCardinality(String),
    signature String Codec(ZSTD(1)),
    beacon_block_root FixedString(66) Codec(ZSTD(1)),
    slot UInt32 CODEC(DoubleDelta, ZSTD(1)),
    slot_start_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    epoch UInt32 CODEC(DoubleDelta, ZSTD(1)),
    epoch_start_date_time DateTime CODEC(DoubleDelta, ZSTD(1)),
    source_epoch UInt32 Codec(DoubleDelta, ZSTD(1)),
    source_epoch_start_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
    source_root FixedString(66) Codec(ZSTD(1)),
    target_epoch UInt32 Codec(DoubleDelta, ZSTD(1)),
    target_epoch_start_date_time DateTime Codec(DoubleDelta, ZSTD(1)),
    target_root FixedString(66) Codec(ZSTD(1)),
    meta_client_name LowCardinality(String),
    meta_client_id String CODEC(ZSTD(1)),
    meta_client_version LowCardinality(String),
    meta_client_implementation LowCardinality(String),
    meta_client_os LowCardinality(String),
    meta_client_ip Nullable(IPv6) CODEC(ZSTD(1)),
    meta_client_geo_city LowCardinality(String) CODEC(ZSTD(1)),
    meta_client_geo_country LowCardinality(String) CODEC(ZSTD(1)),
    meta_client_geo_country_code LowCardinality(String) CODEC(ZSTD(1)),
    meta_client_geo_continent_code LowCardinality(String)  CODEC(ZSTD(1)),
    meta_client_geo_longitude Nullable(Float64)  CODEC(ZSTD(1)),
    meta_client_geo_latitude Nullable(Float64) CODEC(ZSTD(1)),
    meta_client_geo_autonomous_system_number Nullable(UInt32) CODEC(ZSTD(1)),
    meta_client_geo_autonomous_system_organization Nullable(String) CODEC(ZSTD(1)),
    meta_network_id Int32 CODEC(DoubleDelta, ZSTD(1)),
    meta_network_name LowCardinality(String),
    meta_consensus_version LowCardinality(String),
    meta_consensus_version_major LowCardinality(String),
    meta_consensus_version_minor LowCardinality(String),
    meta_consensus_version_patch LowCardinality(String),
    meta_consensus_implementation LowCardinality(String),
    meta_labels Map(String, String) CODEC(ZSTD(1))
) Engine = ReplicatedReplacingMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}', updated_date_time)
PARTITION BY toStartOfMonth(slot_start_date_time)
ORDER BY (slot_start_date_time, unique_key, meta_network_name);

ALTER TABLE default.canonical_beacon_elaborated_attestation_local ON CLUSTER '{cluster}'
MODIFY COMMENT 'Contains elaborated attestations from beacon blocks.',
COMMENT COLUMN unique_key 'Unique key for the row generated from seahash',
COMMENT COLUMN updated_date_time 'When this row was last updated',
COMMENT COLUMN event_date_time 'When the client fetched the elaborated attestation from a beacon node',
COMMENT COLUMN block_slot 'The slot number of the block containing the attestation',
COMMENT COLUMN block_slot_start_date_time 'The wall clock time when the block slot started',
COMMENT COLUMN block_epoch 'The epoch number of the block containing the attestation',
COMMENT COLUMN block_epoch_start_date_time 'The wall clock time when the block epoch started',
COMMENT COLUMN position_in_block 'The position of the attestation in the block',
COMMENT COLUMN block_root 'The root of the block containing the attestation',
COMMENT COLUMN validators 'Array of validator indices participating in the attestation',
COMMENT COLUMN committee_index 'The index of the committee making the attestation',
COMMENT COLUMN signature 'The aggregate signature of the attestation',
COMMENT COLUMN beacon_block_root 'The root of the beacon block being attested to',
COMMENT COLUMN slot 'The slot number being attested to',
COMMENT COLUMN source_epoch 'The source epoch referenced in the attestation',
COMMENT COLUMN source_epoch_start_date_time 'The wall clock time when the source epoch started',
COMMENT COLUMN source_root 'The root of the source checkpoint in the attestation',
COMMENT COLUMN target_epoch 'The target epoch referenced in the attestation',
COMMENT COLUMN target_epoch_start_date_time 'The wall clock time when the target epoch started',
COMMENT COLUMN target_root 'The root of the target checkpoint in the attestation',
COMMENT COLUMN meta_client_name 'Name of the client that generated the event',
COMMENT COLUMN meta_client_id 'Unique Session ID of the client that generated the event. This changes every time the client is restarted.',
COMMENT COLUMN meta_client_version 'Version of the client that generated the event',
COMMENT COLUMN meta_client_implementation 'Implementation of the client that generated the event',
COMMENT COLUMN meta_client_os 'Operating system of the client that generated the event',
COMMENT COLUMN meta_client_ip 'IP address of the client that generated the event',
COMMENT COLUMN meta_client_geo_city 'City of the client that generated the event',
COMMENT COLUMN meta_client_geo_country 'Country of the client that generated the event',
COMMENT COLUMN meta_client_geo_country_code 'Country code of the client that generated the event',
COMMENT COLUMN meta_client_geo_continent_code 'Continent code of the client that generated the event',
COMMENT COLUMN meta_client_geo_longitude 'Longitude of the client that generated the event',
COMMENT COLUMN meta_client_geo_latitude 'Latitude of the client that generated the event',
COMMENT COLUMN meta_client_geo_autonomous_system_number 'Autonomous system number of the client that generated the event',
COMMENT COLUMN meta_client_geo_autonomous_system_organization 'Autonomous system organization of the client that generated the event',
COMMENT COLUMN meta_network_id 'Ethereum network ID',
COMMENT COLUMN meta_network_name 'Ethereum network name',
COMMENT COLUMN meta_consensus_version 'Ethereum consensus client version that generated the event',
COMMENT COLUMN meta_consensus_version_major 'Ethereum consensus client major version that generated the event',
COMMENT COLUMN meta_consensus_version_minor 'Ethereum consensus client minor version that generated the event',
COMMENT COLUMN meta_consensus_version_patch 'Ethereum consensus client patch version that generated the event',
COMMENT COLUMN meta_consensus_implementation 'Ethereum consensus client implementation that generated the event',
COMMENT COLUMN meta_labels 'Labels associated with the event';

CREATE TABLE canonical_beacon_elaborated_attestation on cluster '{cluster}' AS canonical_beacon_elaborated_attestation_local
ENGINE = Distributed('{cluster}', default, canonical_beacon_elaborated_attestation_local, rand());
