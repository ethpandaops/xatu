logging: "info" # panic,fatal,warn,info,debug,trace
addr: ":8080"
metricsAddr: ":9090"
# pprofAddr: ":6060" # optional. if supplied it enables pprof server
# grpcReflection: false # optional. if supplied it enables grpc reflection

labels:
  ethpandaops: rocks
 
# Better to use a NTP server close eg.
#   time.aws.com - AWS
#   time.windows.com - Azure
#   time.google.com - GCP
#   pool.ntp.org - https://www.pool.ntp.org/zone/@
ntpServer: time.google.com

persistence:
  enabled: false
  # driverName: postgres
  # connectionString: postgres://postgres:password@localhost:5432/xatu?sslmode=disable
  # maxIdleConns: 2 # 0 = no idle connections are retained
  # maxOpenConns: 0 # 0 = unlimited

store:
  type: memory
  # type: redis-cluster
  # config:
  #   address: redis://<user>:<password>@<host>:<port>/<db>?addr=<host2>:<port2>&addr=<host3>:<port3>
  #   prefix: xatu
  # type: redis-server
  # config:
  #   address: redis://<user>:<pass>@<ip>:<port>/<db>
  #   prefix: xatu

geoip:
  enabled: false
  # Run ./get-geo.sh to download MaxMind and GeoNames data files required for geo lookups
  # type: maxmind
  # config:
  #   database:
  #     city: ./GeoLite2-City.mmdb
  #     asn: ./GeoLite2-ASN.mmdb
  #   geonames:
  #     cities: ./cities1000.txt # Optional: GeoNames cities file for city centroids
  #     countries: ./countries.txt # Optional: GeoNames countries file for country centroids

services:
  coordinator:
    enabled: false # requires persistence to be enabled
    # nodeRecord:
    #   maxQueueSize: 51200
    #   batchTimeout: 5s
    #   exportTimeout: 30s
    #   maxExportBatchSize: 512
  eventIngester:
    enabled: true
    # authorization:
    #   enabled: true
    #   groups:
    #     my-group:
    #       obscureClientNames: true
    #       precision: "city" # full, city, country, continent, none - controls geo coordinate precision
    #       asn: false # Include ASN data (Autonomous System Number) - defaults to true
    #       users:
    #         my-user:
    #           password: "my-password"
    #           eventFilter:
    #             eventNames:
    #             - BEACON_API_ETH_V1_EVENTS_ATTESTATION
    #             - BEACON_API_ETH_V1_EVENTS_BLOCK
    outputs:
    - name: stdout
      type: stdout
