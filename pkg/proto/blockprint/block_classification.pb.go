// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: pkg/proto/blockprint/block_classification.proto

package blockprint

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockClassification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot              *wrapperspb.UInt64Value `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	BestGuessSingle   string                  `protobuf:"bytes,2,opt,name=best_guess_single,proto3" json:"best_guess_single,omitempty"`
	BestGuessMulti    string                  `protobuf:"bytes,3,opt,name=best_guess_multi,proto3" json:"best_guess_multi,omitempty"`
	ClientProbability *ClientProbability      `protobuf:"bytes,4,opt,name=client_probability,proto3" json:"client_probability,omitempty"`
	ProposerIndex     *wrapperspb.UInt64Value `protobuf:"bytes,5,opt,name=proposer_index,proto3" json:"proposer_index,omitempty"`
}

func (x *BlockClassification) Reset() {
	*x = BlockClassification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_blockprint_block_classification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockClassification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockClassification) ProtoMessage() {}

func (x *BlockClassification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_blockprint_block_classification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockClassification.ProtoReflect.Descriptor instead.
func (*BlockClassification) Descriptor() ([]byte, []int) {
	return file_pkg_proto_blockprint_block_classification_proto_rawDescGZIP(), []int{0}
}

func (x *BlockClassification) GetSlot() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *BlockClassification) GetBestGuessSingle() string {
	if x != nil {
		return x.BestGuessSingle
	}
	return ""
}

func (x *BlockClassification) GetBestGuessMulti() string {
	if x != nil {
		return x.BestGuessMulti
	}
	return ""
}

func (x *BlockClassification) GetClientProbability() *ClientProbability {
	if x != nil {
		return x.ClientProbability
	}
	return nil
}

func (x *BlockClassification) GetProposerIndex() *wrapperspb.UInt64Value {
	if x != nil {
		return x.ProposerIndex
	}
	return nil
}

type ClientProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uncertain  *wrapperspb.FloatValue `protobuf:"bytes,1,opt,name=uncertain,proto3" json:"uncertain,omitempty"`
	Prysm      *wrapperspb.FloatValue `protobuf:"bytes,2,opt,name=prysm,proto3" json:"prysm,omitempty"`
	Teku       *wrapperspb.FloatValue `protobuf:"bytes,3,opt,name=teku,proto3" json:"teku,omitempty"`
	Nimbus     *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=nimbus,proto3" json:"nimbus,omitempty"`
	Lodestar   *wrapperspb.FloatValue `protobuf:"bytes,5,opt,name=lodestar,proto3" json:"lodestar,omitempty"`
	Grandine   *wrapperspb.FloatValue `protobuf:"bytes,6,opt,name=grandine,proto3" json:"grandine,omitempty"`
	Lighthouse *wrapperspb.FloatValue `protobuf:"bytes,7,opt,name=lighthouse,proto3" json:"lighthouse,omitempty"`
}

func (x *ClientProbability) Reset() {
	*x = ClientProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_blockprint_block_classification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientProbability) ProtoMessage() {}

func (x *ClientProbability) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_blockprint_block_classification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientProbability.ProtoReflect.Descriptor instead.
func (*ClientProbability) Descriptor() ([]byte, []int) {
	return file_pkg_proto_blockprint_block_classification_proto_rawDescGZIP(), []int{1}
}

func (x *ClientProbability) GetUncertain() *wrapperspb.FloatValue {
	if x != nil {
		return x.Uncertain
	}
	return nil
}

func (x *ClientProbability) GetPrysm() *wrapperspb.FloatValue {
	if x != nil {
		return x.Prysm
	}
	return nil
}

func (x *ClientProbability) GetTeku() *wrapperspb.FloatValue {
	if x != nil {
		return x.Teku
	}
	return nil
}

func (x *ClientProbability) GetNimbus() *wrapperspb.FloatValue {
	if x != nil {
		return x.Nimbus
	}
	return nil
}

func (x *ClientProbability) GetLodestar() *wrapperspb.FloatValue {
	if x != nil {
		return x.Lodestar
	}
	return nil
}

func (x *ClientProbability) GetGrandine() *wrapperspb.FloatValue {
	if x != nil {
		return x.Grandine
	}
	return nil
}

func (x *ClientProbability) GetLighthouse() *wrapperspb.FloatValue {
	if x != nil {
		return x.Lighthouse
	}
	return nil
}

var File_pkg_proto_blockprint_block_classification_proto protoreflect.FileDescriptor

var file_pkg_proto_blockprint_block_classification_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x62, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x75,
	0x65, 0x73, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x65,
	0x73, 0x74, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x73,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x52, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x96, 0x03, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70,
	0x72, 0x79, 0x73, 0x6d, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x65, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x74, 0x65, 0x6b, 0x75, 0x12, 0x33, 0x0a, 0x06, 0x6e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x6e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x6c, 0x6f,
	0x64, 0x65, 0x73, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x64, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x67, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x6f, 0x70, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_blockprint_block_classification_proto_rawDescOnce sync.Once
	file_pkg_proto_blockprint_block_classification_proto_rawDescData = file_pkg_proto_blockprint_block_classification_proto_rawDesc
)

func file_pkg_proto_blockprint_block_classification_proto_rawDescGZIP() []byte {
	file_pkg_proto_blockprint_block_classification_proto_rawDescOnce.Do(func() {
		file_pkg_proto_blockprint_block_classification_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_blockprint_block_classification_proto_rawDescData)
	})
	return file_pkg_proto_blockprint_block_classification_proto_rawDescData
}

var file_pkg_proto_blockprint_block_classification_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_proto_blockprint_block_classification_proto_goTypes = []interface{}{
	(*BlockClassification)(nil),    // 0: xatu.blockprint.BlockClassification
	(*ClientProbability)(nil),      // 1: xatu.blockprint.ClientProbability
	(*wrapperspb.UInt64Value)(nil), // 2: google.protobuf.UInt64Value
	(*wrapperspb.FloatValue)(nil),  // 3: google.protobuf.FloatValue
}
var file_pkg_proto_blockprint_block_classification_proto_depIdxs = []int32{
	2,  // 0: xatu.blockprint.BlockClassification.slot:type_name -> google.protobuf.UInt64Value
	1,  // 1: xatu.blockprint.BlockClassification.client_probability:type_name -> xatu.blockprint.ClientProbability
	2,  // 2: xatu.blockprint.BlockClassification.proposer_index:type_name -> google.protobuf.UInt64Value
	3,  // 3: xatu.blockprint.ClientProbability.uncertain:type_name -> google.protobuf.FloatValue
	3,  // 4: xatu.blockprint.ClientProbability.prysm:type_name -> google.protobuf.FloatValue
	3,  // 5: xatu.blockprint.ClientProbability.teku:type_name -> google.protobuf.FloatValue
	3,  // 6: xatu.blockprint.ClientProbability.nimbus:type_name -> google.protobuf.FloatValue
	3,  // 7: xatu.blockprint.ClientProbability.lodestar:type_name -> google.protobuf.FloatValue
	3,  // 8: xatu.blockprint.ClientProbability.grandine:type_name -> google.protobuf.FloatValue
	3,  // 9: xatu.blockprint.ClientProbability.lighthouse:type_name -> google.protobuf.FloatValue
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pkg_proto_blockprint_block_classification_proto_init() }
func file_pkg_proto_blockprint_block_classification_proto_init() {
	if File_pkg_proto_blockprint_block_classification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_blockprint_block_classification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockClassification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_blockprint_block_classification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_blockprint_block_classification_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_blockprint_block_classification_proto_goTypes,
		DependencyIndexes: file_pkg_proto_blockprint_block_classification_proto_depIdxs,
		MessageInfos:      file_pkg_proto_blockprint_block_classification_proto_msgTypes,
	}.Build()
	File_pkg_proto_blockprint_block_classification_proto = out.File
	file_pkg_proto_blockprint_block_classification_proto_rawDesc = nil
	file_pkg_proto_blockprint_block_classification_proto_goTypes = nil
	file_pkg_proto_blockprint_block_classification_proto_depIdxs = nil
}
