// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: pkg/proto/eth/v1/fork_choice.proto

// Note: largely inspired by
// https://github.com/prysmaticlabs/prysm/tree/develop/proto/eth/v1

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForkChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JustifiedCheckpoint *Checkpoint       `protobuf:"bytes,1,opt,name=justified_checkpoint,proto3" json:"justified_checkpoint,omitempty"`
	FinalizedCheckpoint *Checkpoint       `protobuf:"bytes,2,opt,name=finalized_checkpoint,proto3" json:"finalized_checkpoint,omitempty"`
	ForkChoiceNodes     []*ForkChoiceNode `protobuf:"bytes,3,rep,name=fork_choice_nodes,proto3" json:"fork_choice_nodes,omitempty"`
}

func (x *ForkChoice) Reset() {
	*x = ForkChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkChoice) ProtoMessage() {}

func (x *ForkChoice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkChoice.ProtoReflect.Descriptor instead.
func (*ForkChoice) Descriptor() ([]byte, []int) {
	return file_pkg_proto_eth_v1_fork_choice_proto_rawDescGZIP(), []int{0}
}

func (x *ForkChoice) GetJustifiedCheckpoint() *Checkpoint {
	if x != nil {
		return x.JustifiedCheckpoint
	}
	return nil
}

func (x *ForkChoice) GetFinalizedCheckpoint() *Checkpoint {
	if x != nil {
		return x.FinalizedCheckpoint
	}
	return nil
}

func (x *ForkChoice) GetForkChoiceNodes() []*ForkChoiceNode {
	if x != nil {
		return x.ForkChoiceNodes
	}
	return nil
}

type ForkChoiceV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JustifiedCheckpoint *CheckpointV2       `protobuf:"bytes,1,opt,name=justified_checkpoint,proto3" json:"justified_checkpoint,omitempty"`
	FinalizedCheckpoint *CheckpointV2       `protobuf:"bytes,2,opt,name=finalized_checkpoint,proto3" json:"finalized_checkpoint,omitempty"`
	ForkChoiceNodes     []*ForkChoiceNodeV2 `protobuf:"bytes,3,rep,name=fork_choice_nodes,proto3" json:"fork_choice_nodes,omitempty"`
}

func (x *ForkChoiceV2) Reset() {
	*x = ForkChoiceV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkChoiceV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkChoiceV2) ProtoMessage() {}

func (x *ForkChoiceV2) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkChoiceV2.ProtoReflect.Descriptor instead.
func (*ForkChoiceV2) Descriptor() ([]byte, []int) {
	return file_pkg_proto_eth_v1_fork_choice_proto_rawDescGZIP(), []int{1}
}

func (x *ForkChoiceV2) GetJustifiedCheckpoint() *CheckpointV2 {
	if x != nil {
		return x.JustifiedCheckpoint
	}
	return nil
}

func (x *ForkChoiceV2) GetFinalizedCheckpoint() *CheckpointV2 {
	if x != nil {
		return x.FinalizedCheckpoint
	}
	return nil
}

func (x *ForkChoiceV2) GetForkChoiceNodes() []*ForkChoiceNodeV2 {
	if x != nil {
		return x.ForkChoiceNodes
	}
	return nil
}

type ForkChoiceNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot               uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	BlockRoot          string `protobuf:"bytes,2,opt,name=block_root,proto3" json:"block_root,omitempty"`
	ParentRoot         string `protobuf:"bytes,3,opt,name=parent_root,proto3" json:"parent_root,omitempty"`
	JustifiedEpoch     uint64 `protobuf:"varint,4,opt,name=justified_epoch,proto3" json:"justified_epoch,omitempty"`
	FinalizedEpoch     uint64 `protobuf:"varint,5,opt,name=finalized_epoch,proto3" json:"finalized_epoch,omitempty"`
	Weight             uint64 `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Validity           string `protobuf:"bytes,7,opt,name=validity,proto3" json:"validity,omitempty"`
	ExecutionBlockHash string `protobuf:"bytes,8,opt,name=ExecutionBlockHash,json=execution_block_hash,proto3" json:"ExecutionBlockHash,omitempty"`
	ExtraData          string `protobuf:"bytes,9,opt,name=ExtraData,json=extra_data,proto3" json:"ExtraData,omitempty"`
}

func (x *ForkChoiceNode) Reset() {
	*x = ForkChoiceNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkChoiceNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkChoiceNode) ProtoMessage() {}

func (x *ForkChoiceNode) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkChoiceNode.ProtoReflect.Descriptor instead.
func (*ForkChoiceNode) Descriptor() ([]byte, []int) {
	return file_pkg_proto_eth_v1_fork_choice_proto_rawDescGZIP(), []int{2}
}

func (x *ForkChoiceNode) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ForkChoiceNode) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *ForkChoiceNode) GetParentRoot() string {
	if x != nil {
		return x.ParentRoot
	}
	return ""
}

func (x *ForkChoiceNode) GetJustifiedEpoch() uint64 {
	if x != nil {
		return x.JustifiedEpoch
	}
	return 0
}

func (x *ForkChoiceNode) GetFinalizedEpoch() uint64 {
	if x != nil {
		return x.FinalizedEpoch
	}
	return 0
}

func (x *ForkChoiceNode) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ForkChoiceNode) GetValidity() string {
	if x != nil {
		return x.Validity
	}
	return ""
}

func (x *ForkChoiceNode) GetExecutionBlockHash() string {
	if x != nil {
		return x.ExecutionBlockHash
	}
	return ""
}

func (x *ForkChoiceNode) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

type ForkChoiceNodeV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot               *wrapperspb.UInt64Value `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	BlockRoot          string                  `protobuf:"bytes,2,opt,name=block_root,proto3" json:"block_root,omitempty"`
	ParentRoot         string                  `protobuf:"bytes,3,opt,name=parent_root,proto3" json:"parent_root,omitempty"`
	JustifiedEpoch     *wrapperspb.UInt64Value `protobuf:"bytes,4,opt,name=justified_epoch,proto3" json:"justified_epoch,omitempty"`
	FinalizedEpoch     *wrapperspb.UInt64Value `protobuf:"bytes,5,opt,name=finalized_epoch,proto3" json:"finalized_epoch,omitempty"`
	Weight             *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Validity           string                  `protobuf:"bytes,7,opt,name=validity,proto3" json:"validity,omitempty"`
	ExecutionBlockHash string                  `protobuf:"bytes,8,opt,name=ExecutionBlockHash,json=execution_block_hash,proto3" json:"ExecutionBlockHash,omitempty"`
	ExtraData          string                  `protobuf:"bytes,9,opt,name=ExtraData,json=extra_data,proto3" json:"ExtraData,omitempty"`
}

func (x *ForkChoiceNodeV2) Reset() {
	*x = ForkChoiceNodeV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkChoiceNodeV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkChoiceNodeV2) ProtoMessage() {}

func (x *ForkChoiceNodeV2) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkChoiceNodeV2.ProtoReflect.Descriptor instead.
func (*ForkChoiceNodeV2) Descriptor() ([]byte, []int) {
	return file_pkg_proto_eth_v1_fork_choice_proto_rawDescGZIP(), []int{3}
}

func (x *ForkChoiceNodeV2) GetSlot() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ForkChoiceNodeV2) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *ForkChoiceNodeV2) GetParentRoot() string {
	if x != nil {
		return x.ParentRoot
	}
	return ""
}

func (x *ForkChoiceNodeV2) GetJustifiedEpoch() *wrapperspb.UInt64Value {
	if x != nil {
		return x.JustifiedEpoch
	}
	return nil
}

func (x *ForkChoiceNodeV2) GetFinalizedEpoch() *wrapperspb.UInt64Value {
	if x != nil {
		return x.FinalizedEpoch
	}
	return nil
}

func (x *ForkChoiceNodeV2) GetWeight() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *ForkChoiceNodeV2) GetValidity() string {
	if x != nil {
		return x.Validity
	}
	return ""
}

func (x *ForkChoiceNodeV2) GetExecutionBlockHash() string {
	if x != nil {
		return x.ExecutionBlockHash
	}
	return ""
}

func (x *ForkChoiceNodeV2) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

var File_pkg_proto_eth_v1_fork_choice_proto protoreflect.FileDescriptor

var file_pkg_proto_eth_v1_fork_choice_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6b, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x14, 0x6a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x49, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x0c, 0x46,
	0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x56, 0x32, 0x12, 0x4d, 0x0a, 0x14, 0x6a,
	0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x56, 0x32, 0x52, 0x14, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e,
	0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x56, 0x32, 0x52, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x66, 0x6f, 0x72,
	0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x56, 0x32, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xbf, 0x02, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x6b, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x09, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x03, 0x0a, 0x10, 0x46, 0x6f, 0x72,
	0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x32, 0x12, 0x30, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x12, 0x46, 0x0a, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x46, 0x0a, 0x0f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x34, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x78,
	0x61, 0x74, 0x75, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74,
	0x68, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_eth_v1_fork_choice_proto_rawDescOnce sync.Once
	file_pkg_proto_eth_v1_fork_choice_proto_rawDescData = file_pkg_proto_eth_v1_fork_choice_proto_rawDesc
)

func file_pkg_proto_eth_v1_fork_choice_proto_rawDescGZIP() []byte {
	file_pkg_proto_eth_v1_fork_choice_proto_rawDescOnce.Do(func() {
		file_pkg_proto_eth_v1_fork_choice_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_eth_v1_fork_choice_proto_rawDescData)
	})
	return file_pkg_proto_eth_v1_fork_choice_proto_rawDescData
}

var file_pkg_proto_eth_v1_fork_choice_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_proto_eth_v1_fork_choice_proto_goTypes = []interface{}{
	(*ForkChoice)(nil),             // 0: xatu.eth.v1.ForkChoice
	(*ForkChoiceV2)(nil),           // 1: xatu.eth.v1.ForkChoiceV2
	(*ForkChoiceNode)(nil),         // 2: xatu.eth.v1.ForkChoiceNode
	(*ForkChoiceNodeV2)(nil),       // 3: xatu.eth.v1.ForkChoiceNodeV2
	(*Checkpoint)(nil),             // 4: xatu.eth.v1.Checkpoint
	(*CheckpointV2)(nil),           // 5: xatu.eth.v1.CheckpointV2
	(*wrapperspb.UInt64Value)(nil), // 6: google.protobuf.UInt64Value
}
var file_pkg_proto_eth_v1_fork_choice_proto_depIdxs = []int32{
	4,  // 0: xatu.eth.v1.ForkChoice.justified_checkpoint:type_name -> xatu.eth.v1.Checkpoint
	4,  // 1: xatu.eth.v1.ForkChoice.finalized_checkpoint:type_name -> xatu.eth.v1.Checkpoint
	2,  // 2: xatu.eth.v1.ForkChoice.fork_choice_nodes:type_name -> xatu.eth.v1.ForkChoiceNode
	5,  // 3: xatu.eth.v1.ForkChoiceV2.justified_checkpoint:type_name -> xatu.eth.v1.CheckpointV2
	5,  // 4: xatu.eth.v1.ForkChoiceV2.finalized_checkpoint:type_name -> xatu.eth.v1.CheckpointV2
	3,  // 5: xatu.eth.v1.ForkChoiceV2.fork_choice_nodes:type_name -> xatu.eth.v1.ForkChoiceNodeV2
	6,  // 6: xatu.eth.v1.ForkChoiceNodeV2.slot:type_name -> google.protobuf.UInt64Value
	6,  // 7: xatu.eth.v1.ForkChoiceNodeV2.justified_epoch:type_name -> google.protobuf.UInt64Value
	6,  // 8: xatu.eth.v1.ForkChoiceNodeV2.finalized_epoch:type_name -> google.protobuf.UInt64Value
	6,  // 9: xatu.eth.v1.ForkChoiceNodeV2.weight:type_name -> google.protobuf.UInt64Value
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pkg_proto_eth_v1_fork_choice_proto_init() }
func file_pkg_proto_eth_v1_fork_choice_proto_init() {
	if File_pkg_proto_eth_v1_fork_choice_proto != nil {
		return
	}
	file_pkg_proto_eth_v1_checkpoint_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkChoiceV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkChoiceNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_eth_v1_fork_choice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkChoiceNodeV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_eth_v1_fork_choice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_eth_v1_fork_choice_proto_goTypes,
		DependencyIndexes: file_pkg_proto_eth_v1_fork_choice_proto_depIdxs,
		MessageInfos:      file_pkg_proto_eth_v1_fork_choice_proto_msgTypes,
	}.Build()
	File_pkg_proto_eth_v1_fork_choice_proto = out.File
	file_pkg_proto_eth_v1_fork_choice_proto_rawDesc = nil
	file_pkg_proto_eth_v1_fork_choice_proto_goTypes = nil
	file_pkg_proto_eth_v1_fork_choice_proto_depIdxs = nil
}
