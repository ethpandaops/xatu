// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pkg/proto/xatu/contributoor.proto

package xatu

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetConfigurationRequest is the request message for retrieving contributoor configuration.
// Currently empty as no parameters are required - authentication is handled via HTTP headers.
type GetConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{0}
}

// GetConfigurationResponse contains the contributoor configuration data along with metadata.
type GetConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version is the configuration version identifier (e.g., "1.0")
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// UpdatedAt is the timestamp when this configuration response was generated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// ContributoorConfiguration contains the actual beacon monitoring configuration data
	Configuration *ContributoorConfiguration `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *GetConfigurationResponse) Reset() {
	*x = GetConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationResponse) ProtoMessage() {}

func (x *GetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigurationResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetConfigurationResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetConfigurationResponse) GetConfiguration() *ContributoorConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// ContributoorConfiguration defines the complete configuration structure for beacon monitoring.
type ContributoorConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GlobalConfig contains the default configuration settings that apply to all users
	Global *GlobalConfig `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	// UserConfig contains user-specific configuration overrides, filtered by authenticated user
	// Key is the username, value is their specific configuration
	User map[string]*UserConfig `protobuf:"bytes,2,rep,name=user,proto3" json:"user,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// NetworkConfig contains network-specific configuration settings for different Ethereum networks
	// Key is the network name (e.g., "mainnet", "holesky"), value is the network configuration
	Network map[string]*NetworkConfig `protobuf:"bytes,3,rep,name=network,proto3" json:"network,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContributoorConfiguration) Reset() {
	*x = ContributoorConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContributoorConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributoorConfiguration) ProtoMessage() {}

func (x *ContributoorConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributoorConfiguration.ProtoReflect.Descriptor instead.
func (*ContributoorConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{2}
}

func (x *ContributoorConfiguration) GetGlobal() *GlobalConfig {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *ContributoorConfiguration) GetUser() map[string]*UserConfig {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ContributoorConfiguration) GetNetwork() map[string]*NetworkConfig {
	if x != nil {
		return x.Network
	}
	return nil
}

// GlobalConfig defines the default beacon chain monitoring configuration.
// These settings apply to all users unless overridden by user-specific configurations.
type GlobalConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BeaconSubscriptionsConfig defines which beacon chain topics to monitor and attestation settings
	BeaconSubscriptions *BeaconSubscriptionsConfig `protobuf:"bytes,1,opt,name=beacon_subscriptions,json=beaconSubscriptions,proto3" json:"beacon_subscriptions,omitempty"`
}

func (x *GlobalConfig) Reset() {
	*x = GlobalConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalConfig) ProtoMessage() {}

func (x *GlobalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalConfig.ProtoReflect.Descriptor instead.
func (*GlobalConfig) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{3}
}

func (x *GlobalConfig) GetBeaconSubscriptions() *BeaconSubscriptionsConfig {
	if x != nil {
		return x.BeaconSubscriptions
	}
	return nil
}

// BeaconSubscriptionsConfig defines which beacon chain events to subscribe to and attestation monitoring settings.
type BeaconSubscriptionsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Topics is a list of beacon chain event types to subscribe to
	// eg: "block", "block_gossip", "head", etc.
	Topics []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// AttestationConfig defines how many and which attestation subnets to monitor
	AttestationConfig *AttestationConfig `protobuf:"bytes,2,opt,name=attestation_config,json=attestationConfig,proto3" json:"attestation_config,omitempty"`
}

func (x *BeaconSubscriptionsConfig) Reset() {
	*x = BeaconSubscriptionsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconSubscriptionsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconSubscriptionsConfig) ProtoMessage() {}

func (x *BeaconSubscriptionsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconSubscriptionsConfig.ProtoReflect.Descriptor instead.
func (*BeaconSubscriptionsConfig) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{4}
}

func (x *BeaconSubscriptionsConfig) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *BeaconSubscriptionsConfig) GetAttestationConfig() *AttestationConfig {
	if x != nil {
		return x.AttestationConfig
	}
	return nil
}

// AttestationConfig defines how attestation subnet monitoring should be configured.
type AttestationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MaxSubnets is the maximum number of attestation subnets to subscribe to
	// Typical values range from 1-64 depending on monitoring requirements and resources
	MaxSubnets int32 `protobuf:"varint,1,opt,name=max_subnets,json=maxSubnets,proto3" json:"max_subnets,omitempty"`
	// SubnetSelectionStrategy defines how to choose which subnets to monitor
	// Common values: "random", "sequential", "specific" (when using specific_subnets)
	SubnetSelectionStrategy string `protobuf:"bytes,2,opt,name=subnet_selection_strategy,json=subnetSelectionStrategy,proto3" json:"subnet_selection_strategy,omitempty"`
	// SpecificSubnets is a list of specific subnet IDs to monitor
	// Only used when subnet_selection_strategy is "specific"
	SpecificSubnets []int32 `protobuf:"varint,3,rep,packed,name=specific_subnets,json=specificSubnets,proto3" json:"specific_subnets,omitempty"`
}

func (x *AttestationConfig) Reset() {
	*x = AttestationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationConfig) ProtoMessage() {}

func (x *AttestationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationConfig.ProtoReflect.Descriptor instead.
func (*AttestationConfig) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{5}
}

func (x *AttestationConfig) GetMaxSubnets() int32 {
	if x != nil {
		return x.MaxSubnets
	}
	return 0
}

func (x *AttestationConfig) GetSubnetSelectionStrategy() string {
	if x != nil {
		return x.SubnetSelectionStrategy
	}
	return ""
}

func (x *AttestationConfig) GetSpecificSubnets() []int32 {
	if x != nil {
		return x.SpecificSubnets
	}
	return nil
}

// UserConfig defines user-specific overrides for beacon chain monitoring.
// These settings take precedence over global configuration for the specific user.
type UserConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BeaconSubscriptionsConfig defines user-specific beacon subscription settings
	// Any fields specified here will override the corresponding global settings
	BeaconSubscriptions *BeaconSubscriptionsConfig `protobuf:"bytes,1,opt,name=beacon_subscriptions,json=beaconSubscriptions,proto3" json:"beacon_subscriptions,omitempty"`
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{6}
}

func (x *UserConfig) GetBeaconSubscriptions() *BeaconSubscriptionsConfig {
	if x != nil {
		return x.BeaconSubscriptions
	}
	return nil
}

// NetworkConfig defines network-specific beacon chain monitoring settings.
// Different Ethereum networks may require different monitoring configurations.
type NetworkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BeaconSubscriptionsConfig defines network-specific beacon subscription settings
	// These can vary based on network characteristics (e.g., mainnet vs hoodi)
	BeaconSubscriptions *BeaconSubscriptionsConfig `protobuf:"bytes,1,opt,name=beacon_subscriptions,json=beaconSubscriptions,proto3" json:"beacon_subscriptions,omitempty"`
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_contributoor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_contributoor_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkConfig) GetBeaconSubscriptions() *BeaconSubscriptionsConfig {
	if x != nil {
		return x.BeaconSubscriptions
	}
	return nil
}

var File_pkg_proto_xatu_contributoor_proto protoreflect.FileDescriptor

var file_pkg_proto_xatu_contributoor_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x78, 0x61, 0x74, 0x75, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xea,
	0x02, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x1a,
	0x49, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x0c, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x0c, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x14, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x7b, 0x0a, 0x19, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9b, 0x01, 0x0a,
	0x11, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x14, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x0d,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a,
	0x14, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x32, 0x63, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x6f,
	0x72, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73,
	0x2f, 0x78, 0x61, 0x74, 0x75, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x78, 0x61, 0x74, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_xatu_contributoor_proto_rawDescOnce sync.Once
	file_pkg_proto_xatu_contributoor_proto_rawDescData = file_pkg_proto_xatu_contributoor_proto_rawDesc
)

func file_pkg_proto_xatu_contributoor_proto_rawDescGZIP() []byte {
	file_pkg_proto_xatu_contributoor_proto_rawDescOnce.Do(func() {
		file_pkg_proto_xatu_contributoor_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_xatu_contributoor_proto_rawDescData)
	})
	return file_pkg_proto_xatu_contributoor_proto_rawDescData
}

var file_pkg_proto_xatu_contributoor_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_proto_xatu_contributoor_proto_goTypes = []any{
	(*GetConfigurationRequest)(nil),   // 0: xatu.GetConfigurationRequest
	(*GetConfigurationResponse)(nil),  // 1: xatu.GetConfigurationResponse
	(*ContributoorConfiguration)(nil), // 2: xatu.ContributoorConfiguration
	(*GlobalConfig)(nil),              // 3: xatu.GlobalConfig
	(*BeaconSubscriptionsConfig)(nil), // 4: xatu.BeaconSubscriptionsConfig
	(*AttestationConfig)(nil),         // 5: xatu.AttestationConfig
	(*UserConfig)(nil),                // 6: xatu.UserConfig
	(*NetworkConfig)(nil),             // 7: xatu.NetworkConfig
	nil,                               // 8: xatu.ContributoorConfiguration.UserEntry
	nil,                               // 9: xatu.ContributoorConfiguration.NetworkEntry
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
}
var file_pkg_proto_xatu_contributoor_proto_depIdxs = []int32{
	10, // 0: xatu.GetConfigurationResponse.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 1: xatu.GetConfigurationResponse.configuration:type_name -> xatu.ContributoorConfiguration
	3,  // 2: xatu.ContributoorConfiguration.global:type_name -> xatu.GlobalConfig
	8,  // 3: xatu.ContributoorConfiguration.user:type_name -> xatu.ContributoorConfiguration.UserEntry
	9,  // 4: xatu.ContributoorConfiguration.network:type_name -> xatu.ContributoorConfiguration.NetworkEntry
	4,  // 5: xatu.GlobalConfig.beacon_subscriptions:type_name -> xatu.BeaconSubscriptionsConfig
	5,  // 6: xatu.BeaconSubscriptionsConfig.attestation_config:type_name -> xatu.AttestationConfig
	4,  // 7: xatu.UserConfig.beacon_subscriptions:type_name -> xatu.BeaconSubscriptionsConfig
	4,  // 8: xatu.NetworkConfig.beacon_subscriptions:type_name -> xatu.BeaconSubscriptionsConfig
	6,  // 9: xatu.ContributoorConfiguration.UserEntry.value:type_name -> xatu.UserConfig
	7,  // 10: xatu.ContributoorConfiguration.NetworkEntry.value:type_name -> xatu.NetworkConfig
	0,  // 11: xatu.Contributoor.GetConfiguration:input_type -> xatu.GetConfigurationRequest
	1,  // 12: xatu.Contributoor.GetConfiguration:output_type -> xatu.GetConfigurationResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pkg_proto_xatu_contributoor_proto_init() }
func file_pkg_proto_xatu_contributoor_proto_init() {
	if File_pkg_proto_xatu_contributoor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_xatu_contributoor_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ContributoorConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BeaconSubscriptionsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AttestationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UserConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_contributoor_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_xatu_contributoor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_xatu_contributoor_proto_goTypes,
		DependencyIndexes: file_pkg_proto_xatu_contributoor_proto_depIdxs,
		MessageInfos:      file_pkg_proto_xatu_contributoor_proto_msgTypes,
	}.Build()
	File_pkg_proto_xatu_contributoor_proto = out.File
	file_pkg_proto_xatu_contributoor_proto_rawDesc = nil
	file_pkg_proto_xatu_contributoor_proto_goTypes = nil
	file_pkg_proto_xatu_contributoor_proto_depIdxs = nil
}
