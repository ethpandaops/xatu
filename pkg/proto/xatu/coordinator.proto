syntax = "proto3";

package xatu;

option go_package = "github.com/ethpandaops/xatu/pkg/proto/xatu";

service Coordinator {
  rpc CreateNodeRecords(CreateNodeRecordsRequest)
      returns (CreateNodeRecordsResponse) {}
  rpc ListStalledExecutionNodeRecords(ListStalledExecutionNodeRecordsRequest)
      returns (ListStalledExecutionNodeRecordsResponse) {}
  rpc CreateExecutionNodeRecordStatus(CreateExecutionNodeRecordStatusRequest)
      returns (CreateExecutionNodeRecordStatusResponse) {}
  rpc CoordinateExecutionNodeRecords(CoordinateExecutionNodeRecordsRequest)
      returns (CoordinateExecutionNodeRecordsResponse) {}
  rpc GetDiscoveryNodeRecord(GetDiscoveryNodeRecordRequest)
      returns (GetDiscoveryNodeRecordResponse) {}

  rpc GetCannonLocation(GetCannonLocationRequest)
      returns (GetCannonLocationResponse) {}
  rpc UpsertCannonLocation(UpsertCannonLocationRequest)
      returns (UpsertCannonLocationResponse) {}
}

message CreateNodeRecordsRequest { repeated string node_records = 1; }

message CreateNodeRecordsResponse {}

message ListStalledExecutionNodeRecordsRequest { int32 page_size = 1; }

message ListStalledExecutionNodeRecordsResponse {
  repeated string node_records = 1;
}

message ExecutionNodeStatus {
  message Capability {
    string name = 1;
    uint32 version = 2;
  }

  message ForkID {
    bytes hash = 1 [ json_name = "hash" ];
    uint64 next = 2 [ json_name = "next" ];
  }

  string node_record = 1;
  string name = 2;
  repeated Capability capabilities = 3;
  uint64 protocol_version = 4;
  uint64 network_id = 5;
  string total_difficulty = 6;
  bytes head = 7;
  bytes genesis = 8;
  ForkID fork_id = 9;
}

message CreateExecutionNodeRecordStatusRequest {
  ExecutionNodeStatus status = 1;
}

message CreateExecutionNodeRecordStatusResponse {}

message CoordinatedNodeRecord {
  string node_record = 1;
  bool connected = 2;
  uint32 connection_attempts = 3;
}

message CoordinateExecutionNodeRecordsRequest {
  repeated CoordinatedNodeRecord node_records = 1;
  uint32 limit = 2;
  repeated uint64 network_ids = 3;
  repeated bytes fork_id_hashes = 4;
  string client_id = 5;
  repeated string capabilities = 6;
}

message CoordinateExecutionNodeRecordsResponse {
  repeated string node_records = 1;
  uint32 retry_delay = 2;
}

message GetDiscoveryNodeRecordRequest {
  repeated uint64 network_ids = 1;
  repeated bytes fork_id_hashes = 2;
}

message GetDiscoveryNodeRecordResponse { string node_record = 1; }

enum CannonType {
  BEACON_API_ETH_V2_BEACON_BLOCK_VOLUNTARY_EXIT = 0;
  BEACON_API_ETH_V2_BEACON_BLOCK_PROPOSER_SLASHING = 1;
  BEACON_API_ETH_V2_BEACON_BLOCK_DEPOSIT = 2;
  BEACON_API_ETH_V2_BEACON_BLOCK_ATTESTER_SLASHING = 3;
  BEACON_API_ETH_V2_BEACON_BLOCK_BLS_TO_EXECUTION_CHANGE = 4;
  BEACON_API_ETH_V2_BEACON_BLOCK_EXECUTION_TRANSACTION = 5;
  BEACON_API_ETH_V2_BEACON_BLOCK_WITHDRAWAL = 6;
  BEACON_API_ETH_V2_BEACON_BLOCK = 7;
  BLOCKPRINT_BLOCK_CLASSIFICATION = 8;
  BEACON_API_ETH_V1_BEACON_BLOB_SIDECAR = 9;
  BEACON_API_ETH_V1_PROPOSER_DUTY = 10;
  BEACON_API_ETH_V2_BEACON_BLOCK_ELABORATED_ATTESTATION = 11;
  BEACON_API_ETH_V1_BEACON_VALIDATORS = 12;
}

message BackfillingCheckpointMarker {
  uint64 finalized_epoch = 1;
  int64 backfill_epoch = 2;
}

message CannonLocationEthV2BeaconBlockVoluntaryExit { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlockProposerSlashing { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlockDeposit { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlockAttesterSlashing { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlockBlsToExecutionChange { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlockExecutionTransaction { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlockWithdrawal { uint64 epoch = 1; }

message CannonLocationEthV2BeaconBlock { uint64 epoch = 1; }

message CannonLocationBlockprintBlockClassification {
  uint64 slot = 1;
  uint64 target_end_slot = 2;
}

message CannonLocationEthV1BeaconBlobSidecar { uint64 epoch = 1; }

message CannonLocationEthV1BeaconProposerDuty {
  BackfillingCheckpointMarker backfilling_checkpoint_marker = 1;
}

message CannonLocationEthV2BeaconBlockElaboratedAttestation {
  BackfillingCheckpointMarker backfilling_checkpoint_marker = 1;
}

message CannonLocationEthV1BeaconValidators {
  BackfillingCheckpointMarker backfilling_checkpoint_marker = 1;
}

message CannonLocation {
  string network_id = 1;
  CannonType type = 2;
  oneof Data {
    CannonLocationEthV2BeaconBlockVoluntaryExit
        eth_v2_beacon_block_voluntary_exit = 3
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_VOLUNTARY_EXIT" ];
    CannonLocationEthV2BeaconBlockProposerSlashing
        eth_v2_beacon_block_proposer_slashing = 4
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_PROPOSER_SLASHING" ];
    CannonLocationEthV2BeaconBlockDeposit eth_v2_beacon_block_deposit = 5
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_DEPOSIT" ];
    CannonLocationEthV2BeaconBlockAttesterSlashing
        eth_v2_beacon_block_attester_slashing = 6
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_ATTESTER_SLASHING" ];
    CannonLocationEthV2BeaconBlockBlsToExecutionChange
        eth_v2_beacon_block_bls_to_execution_change = 7
        [ json_name =
              "BEACON_API_ETH_V2_BEACON_BLOCK_BLS_TO_EXECUTION_CHANGE" ];
    CannonLocationEthV2BeaconBlockExecutionTransaction
        eth_v2_beacon_block_execution_transaction = 8
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_EXECUTION_TRANSACTION" ];
    CannonLocationEthV2BeaconBlockWithdrawal eth_v2_beacon_block_withdrawal = 9
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_WITHDRAWAL" ];
    CannonLocationEthV2BeaconBlock eth_v2_beacon_block = 10
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK" ];
    CannonLocationBlockprintBlockClassification
        blockprint_block_classification = 11
        [ json_name = "BLOCKPRINT_BLOCK_CLASSIFICATION" ];
    CannonLocationEthV1BeaconBlobSidecar eth_v1_beacon_blob_sidecar = 12
        [ json_name = "BEACON_API_ETH_V1_BEACON_BLOB_SIDECAR" ];
    CannonLocationEthV1BeaconProposerDuty eth_v1_beacon_proposer_duty = 13
        [ json_name = "BEACON_API_ETH_V1_PROPOSER_DUTY" ];
    CannonLocationEthV2BeaconBlockElaboratedAttestation
        eth_v2_beacon_block_elaborated_attestation = 14
        [ json_name = "BEACON_API_ETH_V2_BEACON_BLOCK_ELABORATED_ATTESTATION" ];
    CannonLocationEthV1BeaconValidators eth_v1_beacon_validators = 15
        [ json_name = "BEACON_API_ETH_V1_BEACON_VALIDATORS" ];
  }
}

message GetCannonLocationRequest {
  string network_id = 1;
  CannonType type = 2;
}

message GetCannonLocationResponse { CannonLocation location = 1; }

message UpsertCannonLocationRequest { CannonLocation location = 1; }

message UpsertCannonLocationResponse {}
