// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: pkg/proto/xatu/event_ingester.proto

package xatu

import (
	v1 "github.com/ethpandaops/xatu/pkg/proto/eth/v1"
	v2 "github.com/ethpandaops/xatu/pkg/proto/eth/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event_Name int32

const (
	Event_BEACON_API_ETH_V1_EVENTS_UNKNOWN                Event_Name = 0
	Event_BEACON_API_ETH_V1_EVENTS_BLOCK                  Event_Name = 1
	Event_BEACON_API_ETH_V1_EVENTS_CHAIN_REORG            Event_Name = 2
	Event_BEACON_API_ETH_V1_EVENTS_FINALIZED_CHECKPOINT   Event_Name = 3
	Event_BEACON_API_ETH_V1_EVENTS_HEAD                   Event_Name = 4
	Event_BEACON_API_ETH_V1_EVENTS_VOLUNTARY_EXIT         Event_Name = 5
	Event_BEACON_API_ETH_V1_EVENTS_ATTESTATION            Event_Name = 6
	Event_BEACON_API_ETH_V1_EVENTS_CONTRIBUTION_AND_PROOF Event_Name = 7
	Event_MEMPOOL_TRANSACTION                             Event_Name = 8
	Event_BEACON_API_ETH_V2_BEACON_BLOCK                  Event_Name = 9
	Event_BEACON_API_ETH_V1_DEBUG_FORK_CHOICE             Event_Name = 10
	Event_BEACON_API_ETH_V1_DEBUG_FORK_CHOICE_REORG       Event_Name = 11
)

// Enum value maps for Event_Name.
var (
	Event_Name_name = map[int32]string{
		0:  "BEACON_API_ETH_V1_EVENTS_UNKNOWN",
		1:  "BEACON_API_ETH_V1_EVENTS_BLOCK",
		2:  "BEACON_API_ETH_V1_EVENTS_CHAIN_REORG",
		3:  "BEACON_API_ETH_V1_EVENTS_FINALIZED_CHECKPOINT",
		4:  "BEACON_API_ETH_V1_EVENTS_HEAD",
		5:  "BEACON_API_ETH_V1_EVENTS_VOLUNTARY_EXIT",
		6:  "BEACON_API_ETH_V1_EVENTS_ATTESTATION",
		7:  "BEACON_API_ETH_V1_EVENTS_CONTRIBUTION_AND_PROOF",
		8:  "MEMPOOL_TRANSACTION",
		9:  "BEACON_API_ETH_V2_BEACON_BLOCK",
		10: "BEACON_API_ETH_V1_DEBUG_FORK_CHOICE",
		11: "BEACON_API_ETH_V1_DEBUG_FORK_CHOICE_REORG",
	}
	Event_Name_value = map[string]int32{
		"BEACON_API_ETH_V1_EVENTS_UNKNOWN":                0,
		"BEACON_API_ETH_V1_EVENTS_BLOCK":                  1,
		"BEACON_API_ETH_V1_EVENTS_CHAIN_REORG":            2,
		"BEACON_API_ETH_V1_EVENTS_FINALIZED_CHECKPOINT":   3,
		"BEACON_API_ETH_V1_EVENTS_HEAD":                   4,
		"BEACON_API_ETH_V1_EVENTS_VOLUNTARY_EXIT":         5,
		"BEACON_API_ETH_V1_EVENTS_ATTESTATION":            6,
		"BEACON_API_ETH_V1_EVENTS_CONTRIBUTION_AND_PROOF": 7,
		"MEMPOOL_TRANSACTION":                             8,
		"BEACON_API_ETH_V2_BEACON_BLOCK":                  9,
		"BEACON_API_ETH_V1_DEBUG_FORK_CHOICE":             10,
		"BEACON_API_ETH_V1_DEBUG_FORK_CHOICE_REORG":       11,
	}
)

func (x Event_Name) Enum() *Event_Name {
	p := new(Event_Name)
	*p = x
	return p
}

func (x Event_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_xatu_event_ingester_proto_enumTypes[0].Descriptor()
}

func (Event_Name) Type() protoreflect.EnumType {
	return &file_pkg_proto_xatu_event_ingester_proto_enumTypes[0]
}

func (x Event_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Name.Descriptor instead.
func (Event_Name) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{9, 0}
}

type CreateEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*DecoratedEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *CreateEventsRequest) Reset() {
	*x = CreateEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventsRequest) ProtoMessage() {}

func (x *CreateEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventsRequest.ProtoReflect.Descriptor instead.
func (*CreateEventsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEventsRequest) GetEvents() []*DecoratedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateEventsResponse) Reset() {
	*x = CreateEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventsResponse) ProtoMessage() {}

func (x *CreateEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventsResponse.ProtoReflect.Descriptor instead.
func (*CreateEventsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{1}
}

type Epoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number is the epoch number.
	Number uint64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// StartDateTime is the epoch start time.
	StartDateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date_time,proto3" json:"start_date_time,omitempty"`
}

func (x *Epoch) Reset() {
	*x = Epoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Epoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Epoch) ProtoMessage() {}

func (x *Epoch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Epoch.ProtoReflect.Descriptor instead.
func (*Epoch) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{2}
}

func (x *Epoch) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Epoch) GetStartDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateTime
	}
	return nil
}

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number is the slot number.
	Number uint64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// StartDateTime is the slot start time.
	StartDateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date_time,proto3" json:"start_date_time,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{3}
}

func (x *Slot) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Slot) GetStartDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateTime
	}
	return nil
}

type ForkID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Next string `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *ForkID) Reset() {
	*x = ForkID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkID) ProtoMessage() {}

func (x *ForkID) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkID.ProtoReflect.Descriptor instead.
func (*ForkID) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{4}
}

func (x *ForkID) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ForkID) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

type Propagation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SlotStartDiff is the difference between the slot start time and the
	// attestation received time (in milliseconds).
	SlotStartDiff uint64 `protobuf:"varint,3,opt,name=slot_start_diff,proto3" json:"slot_start_diff,omitempty"`
}

func (x *Propagation) Reset() {
	*x = Propagation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Propagation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Propagation) ProtoMessage() {}

func (x *Propagation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Propagation.ProtoReflect.Descriptor instead.
func (*Propagation) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{5}
}

func (x *Propagation) GetSlotStartDiff() uint64 {
	if x != nil {
		return x.SlotStartDiff
	}
	return 0
}

type ClientMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the client.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version is the Xatu-sentry version of the client.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// ID is the unique ID of the client.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Implmentation is the implementation of the client.
	Implementation string `protobuf:"bytes,4,opt,name=implementation,proto3" json:"implementation,omitempty"`
	// OS is the operating system of the client.
	Os string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	// ClockDrift is the NTP calculated clock drift of the client.
	ClockDrift uint64 `protobuf:"varint,6,opt,name=clock_drift,proto3" json:"clock_drift,omitempty"`
	// Ethereum contains information about the Ethereum network and configuration.
	Ethereum *ClientMeta_Ethereum `protobuf:"bytes,8,opt,name=ethereum,proto3" json:"ethereum,omitempty"`
	// Labels contains additional labels as set by the client.
	Labels map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// AdditionalData contains additional, computed data as set by the client
	// about the event.
	//
	// Types that are assignable to AdditionalData:
	//	*ClientMeta_EthV1EventsAttestation
	//	*ClientMeta_EthV1EventsHead
	//	*ClientMeta_EthV1EventsBlock
	//	*ClientMeta_EthV1EventsVoluntaryExit
	//	*ClientMeta_EthV1EventsFinalizedCheckpoint
	//	*ClientMeta_EthV1EventsChainReorg
	//	*ClientMeta_EthV1EventsContributionAndProof
	//	*ClientMeta_MempoolTransaction
	//	*ClientMeta_EthV2BeaconBlock
	AdditionalData isClientMeta_AdditionalData `protobuf_oneof:"AdditionalData"`
}

func (x *ClientMeta) Reset() {
	*x = ClientMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta) ProtoMessage() {}

func (x *ClientMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta.ProtoReflect.Descriptor instead.
func (*ClientMeta) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6}
}

func (x *ClientMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientMeta) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClientMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClientMeta) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

func (x *ClientMeta) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ClientMeta) GetClockDrift() uint64 {
	if x != nil {
		return x.ClockDrift
	}
	return 0
}

func (x *ClientMeta) GetEthereum() *ClientMeta_Ethereum {
	if x != nil {
		return x.Ethereum
	}
	return nil
}

func (x *ClientMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (m *ClientMeta) GetAdditionalData() isClientMeta_AdditionalData {
	if m != nil {
		return m.AdditionalData
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsAttestation() *ClientMeta_AdditionalEthV1EventsAttestationData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsAttestation); ok {
		return x.EthV1EventsAttestation
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsHead() *ClientMeta_AdditionalEthV1EventsHeadData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsHead); ok {
		return x.EthV1EventsHead
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsBlock() *ClientMeta_AdditionalEthV1EventsBlockData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsBlock); ok {
		return x.EthV1EventsBlock
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsVoluntaryExit() *ClientMeta_AdditionalEthV1EventsVoluntaryExitData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsVoluntaryExit); ok {
		return x.EthV1EventsVoluntaryExit
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsFinalizedCheckpoint() *ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsFinalizedCheckpoint); ok {
		return x.EthV1EventsFinalizedCheckpoint
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsChainReorg() *ClientMeta_AdditionalEthV1EventsChainReorgData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsChainReorg); ok {
		return x.EthV1EventsChainReorg
	}
	return nil
}

func (x *ClientMeta) GetEthV1EventsContributionAndProof() *ClientMeta_AdditionalEthV1EventsContributionAndProofData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV1EventsContributionAndProof); ok {
		return x.EthV1EventsContributionAndProof
	}
	return nil
}

func (x *ClientMeta) GetMempoolTransaction() *ClientMeta_AdditionalMempoolTransactionData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_MempoolTransaction); ok {
		return x.MempoolTransaction
	}
	return nil
}

func (x *ClientMeta) GetEthV2BeaconBlock() *ClientMeta_AdditionalEthV2BeaconBlockData {
	if x, ok := x.GetAdditionalData().(*ClientMeta_EthV2BeaconBlock); ok {
		return x.EthV2BeaconBlock
	}
	return nil
}

type isClientMeta_AdditionalData interface {
	isClientMeta_AdditionalData()
}

type ClientMeta_EthV1EventsAttestation struct {
	// AdditionalEthV1EventsAttestationData contains additional data about an eth v1
	// attestation event.
	EthV1EventsAttestation *ClientMeta_AdditionalEthV1EventsAttestationData `protobuf:"bytes,10,opt,name=eth_v1_events_attestation,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV1EventsHead struct {
	// AdditionalEthV1EventsHeadData contains additional data about the eth v1 head
	// event.
	EthV1EventsHead *ClientMeta_AdditionalEthV1EventsHeadData `protobuf:"bytes,11,opt,name=eth_v1_events_head,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV1EventsBlock struct {
	// AdditionalEthV1EventsBlockData contains additional data about the eth v1 block
	// event.
	EthV1EventsBlock *ClientMeta_AdditionalEthV1EventsBlockData `protobuf:"bytes,12,opt,name=eth_v1_events_block,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV1EventsVoluntaryExit struct {
	// AdditionalEthV1EventsVoluntaryExitData contains additional data about the eth
	// v1 voluntary exit event.
	EthV1EventsVoluntaryExit *ClientMeta_AdditionalEthV1EventsVoluntaryExitData `protobuf:"bytes,13,opt,name=eth_v1_events_voluntary_exit,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV1EventsFinalizedCheckpoint struct {
	// AdditionalEthV1EventsFinalizedCheckpointData contains additional data about the
	// eth v1 finalized checkpoint event.
	EthV1EventsFinalizedCheckpoint *ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData `protobuf:"bytes,14,opt,name=eth_v1_events_finalized_checkpoint,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV1EventsChainReorg struct {
	// AdditionalEthV1EventsChainReorgData contains additional data about the eth v1
	// chain reorg event.
	EthV1EventsChainReorg *ClientMeta_AdditionalEthV1EventsChainReorgData `protobuf:"bytes,15,opt,name=eth_v1_events_chain_reorg,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV1EventsContributionAndProof struct {
	// AdditionalEthV1EventsContributionAndProofData contains additional data about
	// the eth v1 contribution and proof.
	EthV1EventsContributionAndProof *ClientMeta_AdditionalEthV1EventsContributionAndProofData `protobuf:"bytes,16,opt,name=eth_v1_events_contribution_and_proof,json=additional_data,proto3,oneof"`
}

type ClientMeta_MempoolTransaction struct {
	// AdditionalMempoolTransactionData contains additional data about the
	// mempool transaction event.
	MempoolTransaction *ClientMeta_AdditionalMempoolTransactionData `protobuf:"bytes,17,opt,name=mempool_transaction,json=additional_data,proto3,oneof"`
}

type ClientMeta_EthV2BeaconBlock struct {
	// AdditionalEthV2BeaconBlockData contains additional data about the eth v2
	// beacon block event.
	EthV2BeaconBlock *ClientMeta_AdditionalEthV2BeaconBlockData `protobuf:"bytes,18,opt,name=eth_v2_beacon_block,json=additional_data,proto3,oneof"`
}

func (*ClientMeta_EthV1EventsAttestation) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV1EventsHead) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV1EventsBlock) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV1EventsVoluntaryExit) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV1EventsFinalizedCheckpoint) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV1EventsChainReorg) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV1EventsContributionAndProof) isClientMeta_AdditionalData() {}

func (*ClientMeta_MempoolTransaction) isClientMeta_AdditionalData() {}

func (*ClientMeta_EthV2BeaconBlock) isClientMeta_AdditionalData() {}

type ServerMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event contains information about the event from the server's perspective.
	Event *ServerMeta_Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Client contains information about the client from the server's perspective.
	Client *ServerMeta_Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	// AdditionalData contains additional data as set by the server.
	AdditionalData map[string]string `protobuf:"bytes,3,rep,name=additional_data,proto3" json:"additional_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerMeta) Reset() {
	*x = ServerMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMeta) ProtoMessage() {}

func (x *ServerMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMeta.ProtoReflect.Descriptor instead.
func (*ServerMeta) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{7}
}

func (x *ServerMeta) GetEvent() *ServerMeta_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ServerMeta) GetClient() *ServerMeta_Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ServerMeta) GetAdditionalData() map[string]string {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Client contains information about the event that is from the client.
	Client *ClientMeta `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	// Server contains information about the event that is from the server.
	Server *ServerMeta `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{8}
}

func (x *Meta) GetClient() *ClientMeta {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Meta) GetServer() *ServerMeta {
	if x != nil {
		return x.Server
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the event.
	Name Event_Name `protobuf:"varint,1,opt,name=name,proto3,enum=xatu.Event_Name" json:"name,omitempty"`
	// DateTime is the date and time of the event as seen by the client.
	DateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_time,proto3" json:"date_time,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{9}
}

func (x *Event) GetName() Event_Name {
	if x != nil {
		return x.Name
	}
	return Event_BEACON_API_ETH_V1_EVENTS_UNKNOWN
}

func (x *Event) GetDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTime
	}
	return nil
}

// DecoratedEvent is an event that has been decorated with additional
// information.
type DecoratedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Meta  *Meta  `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// Types that are assignable to Data:
	//	*DecoratedEvent_EthV1EventsAttestation
	//	*DecoratedEvent_EthV1EventsBlock
	//	*DecoratedEvent_EthV1EventsChainReorg
	//	*DecoratedEvent_EthV1EventsFinalizedCheckpoint
	//	*DecoratedEvent_EthV1EventsHead
	//	*DecoratedEvent_EthV1EventsVoluntaryExit
	//	*DecoratedEvent_EthV1EventsContributionAndProof
	//	*DecoratedEvent_MempoolTransaction
	//	*DecoratedEvent_EthV2BeaconBlock
	Data isDecoratedEvent_Data `protobuf_oneof:"data"`
}

func (x *DecoratedEvent) Reset() {
	*x = DecoratedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecoratedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecoratedEvent) ProtoMessage() {}

func (x *DecoratedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecoratedEvent.ProtoReflect.Descriptor instead.
func (*DecoratedEvent) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{10}
}

func (x *DecoratedEvent) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *DecoratedEvent) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (m *DecoratedEvent) GetData() isDecoratedEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsAttestation() *v1.Attestation {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsAttestation); ok {
		return x.EthV1EventsAttestation
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsBlock() *v1.EventBlock {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsBlock); ok {
		return x.EthV1EventsBlock
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsChainReorg() *v1.EventChainReorg {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsChainReorg); ok {
		return x.EthV1EventsChainReorg
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsFinalizedCheckpoint() *v1.EventFinalizedCheckpoint {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsFinalizedCheckpoint); ok {
		return x.EthV1EventsFinalizedCheckpoint
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsHead() *v1.EventHead {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsHead); ok {
		return x.EthV1EventsHead
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsVoluntaryExit() *v1.EventVoluntaryExit {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsVoluntaryExit); ok {
		return x.EthV1EventsVoluntaryExit
	}
	return nil
}

func (x *DecoratedEvent) GetEthV1EventsContributionAndProof() *v1.EventContributionAndProof {
	if x, ok := x.GetData().(*DecoratedEvent_EthV1EventsContributionAndProof); ok {
		return x.EthV1EventsContributionAndProof
	}
	return nil
}

func (x *DecoratedEvent) GetMempoolTransaction() string {
	if x, ok := x.GetData().(*DecoratedEvent_MempoolTransaction); ok {
		return x.MempoolTransaction
	}
	return ""
}

func (x *DecoratedEvent) GetEthV2BeaconBlock() *v2.EventBlock {
	if x, ok := x.GetData().(*DecoratedEvent_EthV2BeaconBlock); ok {
		return x.EthV2BeaconBlock
	}
	return nil
}

type isDecoratedEvent_Data interface {
	isDecoratedEvent_Data()
}

type DecoratedEvent_EthV1EventsAttestation struct {
	EthV1EventsAttestation *v1.Attestation `protobuf:"bytes,3,opt,name=eth_v1_events_attestation,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV1EventsBlock struct {
	EthV1EventsBlock *v1.EventBlock `protobuf:"bytes,4,opt,name=eth_v1_events_block,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV1EventsChainReorg struct {
	EthV1EventsChainReorg *v1.EventChainReorg `protobuf:"bytes,5,opt,name=eth_v1_events_chain_reorg,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV1EventsFinalizedCheckpoint struct {
	EthV1EventsFinalizedCheckpoint *v1.EventFinalizedCheckpoint `protobuf:"bytes,6,opt,name=eth_v1_events_finalized_checkpoint,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV1EventsHead struct {
	EthV1EventsHead *v1.EventHead `protobuf:"bytes,7,opt,name=eth_v1_events_head,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV1EventsVoluntaryExit struct {
	EthV1EventsVoluntaryExit *v1.EventVoluntaryExit `protobuf:"bytes,8,opt,name=eth_v1_events_voluntary_exit,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV1EventsContributionAndProof struct {
	EthV1EventsContributionAndProof *v1.EventContributionAndProof `protobuf:"bytes,9,opt,name=eth_v1_events_contribution_and_proof,json=data,proto3,oneof"`
}

type DecoratedEvent_MempoolTransaction struct {
	MempoolTransaction string `protobuf:"bytes,10,opt,name=mempool_transaction,json=data,proto3,oneof"`
}

type DecoratedEvent_EthV2BeaconBlock struct {
	EthV2BeaconBlock *v2.EventBlock `protobuf:"bytes,11,opt,name=eth_v2_beacon_block,json=data,proto3,oneof"`
}

func (*DecoratedEvent_EthV1EventsAttestation) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV1EventsBlock) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV1EventsChainReorg) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV1EventsFinalizedCheckpoint) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV1EventsHead) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV1EventsVoluntaryExit) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV1EventsContributionAndProof) isDecoratedEvent_Data() {}

func (*DecoratedEvent_MempoolTransaction) isDecoratedEvent_Data() {}

func (*DecoratedEvent_EthV2BeaconBlock) isDecoratedEvent_Data() {}

type ClientMeta_Ethereum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network contains information about the network.
	Network *ClientMeta_Ethereum_Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// ExecutionClient is the name of the execution client.
	Execution *ClientMeta_Ethereum_Execution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	// ConsensusClient is the name of the consensus client.
	Consensus *ClientMeta_Ethereum_Consensus `protobuf:"bytes,3,opt,name=consensus,proto3" json:"consensus,omitempty"`
}

func (x *ClientMeta_Ethereum) Reset() {
	*x = ClientMeta_Ethereum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_Ethereum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_Ethereum) ProtoMessage() {}

func (x *ClientMeta_Ethereum) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_Ethereum.ProtoReflect.Descriptor instead.
func (*ClientMeta_Ethereum) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ClientMeta_Ethereum) GetNetwork() *ClientMeta_Ethereum_Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *ClientMeta_Ethereum) GetExecution() *ClientMeta_Ethereum_Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *ClientMeta_Ethereum) GetConsensus() *ClientMeta_Ethereum_Consensus {
	if x != nil {
		return x.Consensus
	}
	return nil
}

type ClientMeta_AdditionalEthV1AttestationSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the source.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1AttestationSourceData) Reset() {
	*x = ClientMeta_AdditionalEthV1AttestationSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1AttestationSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1AttestationSourceData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1AttestationSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1AttestationSourceData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1AttestationSourceData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 2}
}

func (x *ClientMeta_AdditionalEthV1AttestationSourceData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

type ClientMeta_AdditionalEthV1AttestationTargetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the source.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1AttestationTargetData) Reset() {
	*x = ClientMeta_AdditionalEthV1AttestationTargetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1AttestationTargetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1AttestationTargetData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1AttestationTargetData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1AttestationTargetData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1AttestationTargetData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 3}
}

func (x *ClientMeta_AdditionalEthV1AttestationTargetData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsAttestationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Source contains information for the best currently justified checkpoint.
	Source *ClientMeta_AdditionalEthV1AttestationSourceData `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Target contains information of the block at the start of the current
	// epoch.
	Target *ClientMeta_AdditionalEthV1AttestationTargetData `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// Slot contains the slot information for the attestation.
	Slot *Slot `protobuf:"bytes,3,opt,name=slot,proto3" json:"slot,omitempty"`
	// Epoch contains the epoch information for the attestation.
	Epoch *Epoch `protobuf:"bytes,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Propagation contains information about the propagation of the
	// attestation.
	Propagation *Propagation `protobuf:"bytes,5,opt,name=propagation,proto3" json:"propagation,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsAttestationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsAttestationData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsAttestationData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsAttestationData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 4}
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) GetSource() *ClientMeta_AdditionalEthV1AttestationSourceData {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) GetTarget() *ClientMeta_AdditionalEthV1AttestationTargetData {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsAttestationData) GetPropagation() *Propagation {
	if x != nil {
		return x.Propagation
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsHeadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the head.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Slot contains the slot information for the head event.
	Slot *Slot `protobuf:"bytes,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Propagation contains information about the propagation of the head.
	Propagation *Propagation `protobuf:"bytes,3,opt,name=propagation,proto3" json:"propagation,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsHeadData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsHeadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsHeadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsHeadData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsHeadData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsHeadData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsHeadData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 5}
}

func (x *ClientMeta_AdditionalEthV1EventsHeadData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsHeadData) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsHeadData) GetPropagation() *Propagation {
	if x != nil {
		return x.Propagation
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the block.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Slot contains the slot information for the block.
	Slot *Slot `protobuf:"bytes,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Propagation contains information about the propagation of the block.
	Propagation *Propagation `protobuf:"bytes,3,opt,name=propagation,proto3" json:"propagation,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsBlockData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsBlockData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsBlockData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsBlockData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 6}
}

func (x *ClientMeta_AdditionalEthV1EventsBlockData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsBlockData) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsBlockData) GetPropagation() *Propagation {
	if x != nil {
		return x.Propagation
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsVoluntaryExitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the voluntary exit.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsVoluntaryExitData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsVoluntaryExitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsVoluntaryExitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsVoluntaryExitData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsVoluntaryExitData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsVoluntaryExitData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsVoluntaryExitData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 7}
}

func (x *ClientMeta_AdditionalEthV1EventsVoluntaryExitData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the finalized checkpoint.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 8}
}

func (x *ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsChainReorgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the chain reorg.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Slot contains the slot information for the chain reorg.
	Slot *Slot `protobuf:"bytes,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Propagation contains information about the propagation of the chain
	// reorg.
	Propagation *Propagation `protobuf:"bytes,3,opt,name=propagation,proto3" json:"propagation,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsChainReorgData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsChainReorgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsChainReorgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsChainReorgData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsChainReorgData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsChainReorgData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsChainReorgData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 9}
}

func (x *ClientMeta_AdditionalEthV1EventsChainReorgData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsChainReorgData) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsChainReorgData) GetPropagation() *Propagation {
	if x != nil {
		return x.Propagation
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the contribution and proof.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Slot contains the slot information for the contribution and proof.
	Slot *Slot `protobuf:"bytes,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Propagation contains information about the propagation of the
	// contribution and proof.
	Propagation *Propagation `protobuf:"bytes,3,opt,name=propagation,proto3" json:"propagation,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 10}
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData) GetPropagation() *Propagation {
	if x != nil {
		return x.Propagation
	}
	return nil
}

type ClientMeta_AdditionalEthV1EventsContributionAndProofData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contribution *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData `protobuf:"bytes,1,opt,name=contribution,proto3" json:"contribution,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofData) Reset() {
	*x = ClientMeta_AdditionalEthV1EventsContributionAndProofData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1EventsContributionAndProofData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1EventsContributionAndProofData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1EventsContributionAndProofData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 11}
}

func (x *ClientMeta_AdditionalEthV1EventsContributionAndProofData) GetContribution() *ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData {
	if x != nil {
		return x.Contribution
	}
	return nil
}

type ClientMeta_ForkChoiceSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v1.ForkChoice `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// RequestEpoch contains the wall clock epoch for when the fork choice was requested.
	RequestEpoch *Epoch `protobuf:"bytes,2,opt,name=request_epoch,json=requestEpoch,proto3" json:"request_epoch,omitempty"`
	// RequestSlot contains the wall clock slot for when the fork choice was requested.
	RequestSlot *Slot `protobuf:"bytes,3,opt,name=request_slot,json=requestSlot,proto3" json:"request_slot,omitempty"`
	// RequestedAtSlotStartDiffMs is the difference how far in to the slot the
	// sentry was when it requested the fork choice snapshot (in milliseconds).
	RequestedAtSlotStartDiffMs uint64 `protobuf:"varint,4,opt,name=requested_at_slot_start_diff_ms,proto3" json:"requested_at_slot_start_diff_ms,omitempty"`
	// RequestDurationMs is the duration of the fork choice snapshot request
	// (in milliseconds).
	RequestDurationMs uint64 `protobuf:"varint,5,opt,name=request_duration_ms,proto3" json:"request_duration_ms,omitempty"`
}

func (x *ClientMeta_ForkChoiceSnapshot) Reset() {
	*x = ClientMeta_ForkChoiceSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_ForkChoiceSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_ForkChoiceSnapshot) ProtoMessage() {}

func (x *ClientMeta_ForkChoiceSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_ForkChoiceSnapshot.ProtoReflect.Descriptor instead.
func (*ClientMeta_ForkChoiceSnapshot) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 12}
}

func (x *ClientMeta_ForkChoiceSnapshot) GetData() *v1.ForkChoice {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClientMeta_ForkChoiceSnapshot) GetRequestEpoch() *Epoch {
	if x != nil {
		return x.RequestEpoch
	}
	return nil
}

func (x *ClientMeta_ForkChoiceSnapshot) GetRequestSlot() *Slot {
	if x != nil {
		return x.RequestSlot
	}
	return nil
}

func (x *ClientMeta_ForkChoiceSnapshot) GetRequestedAtSlotStartDiffMs() uint64 {
	if x != nil {
		return x.RequestedAtSlotStartDiffMs
	}
	return 0
}

func (x *ClientMeta_ForkChoiceSnapshot) GetRequestDurationMs() uint64 {
	if x != nil {
		return x.RequestDurationMs
	}
	return 0
}

type ClientMeta_AdditionalEthV1DebugForkChoiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkChoice *ClientMeta_ForkChoiceSnapshot `protobuf:"bytes,1,opt,name=fork_choice,json=forkChoice,proto3" json:"fork_choice,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceData) Reset() {
	*x = ClientMeta_AdditionalEthV1DebugForkChoiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1DebugForkChoiceData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1DebugForkChoiceData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1DebugForkChoiceData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 13}
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceData) GetForkChoice() *ClientMeta_ForkChoiceSnapshot {
	if x != nil {
		return x.ForkChoice
	}
	return nil
}

type ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *ClientMeta_ForkChoiceSnapshot `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *ClientMeta_ForkChoiceSnapshot `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) Reset() {
	*x = ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 14}
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) GetBefore() *ClientMeta_ForkChoiceSnapshot {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData) GetAfter() *ClientMeta_ForkChoiceSnapshot {
	if x != nil {
		return x.After
	}
	return nil
}

type ClientMeta_AdditionalMempoolTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash is the transaction hash.
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// From is the transaction sender hash.
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// To is the transaction receiver hash.
	To string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// Nonce is the transaction nonce.
	Nonce uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// GasPrice is the transaction gas price.
	GasPrice string `protobuf:"bytes,5,opt,name=gas_price,proto3" json:"gas_price,omitempty"`
	// Gas is the transaction gas.
	Gas uint64 `protobuf:"varint,6,opt,name=gas,proto3" json:"gas,omitempty"`
	// Value is the transaction value.
	Value string `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	// Size is the transaction size in bytes.
	Size string `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
	// CallDataSize is the call data size in bytes.
	CallDataSize string `protobuf:"bytes,9,opt,name=call_data_size,proto3" json:"call_data_size,omitempty"`
}

func (x *ClientMeta_AdditionalMempoolTransactionData) Reset() {
	*x = ClientMeta_AdditionalMempoolTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalMempoolTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalMempoolTransactionData) ProtoMessage() {}

func (x *ClientMeta_AdditionalMempoolTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalMempoolTransactionData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalMempoolTransactionData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 15}
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ClientMeta_AdditionalMempoolTransactionData) GetCallDataSize() string {
	if x != nil {
		return x.CallDataSize
	}
	return ""
}

type ClientMeta_AdditionalEthV2BeaconBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Epoch contains the epoch information for the block.
	Epoch *Epoch `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Slot contains the slot information for the block.
	Slot *Slot `protobuf:"bytes,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Version contains information about the version of the block.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ClientMeta_AdditionalEthV2BeaconBlockData) Reset() {
	*x = ClientMeta_AdditionalEthV2BeaconBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_AdditionalEthV2BeaconBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_AdditionalEthV2BeaconBlockData) ProtoMessage() {}

func (x *ClientMeta_AdditionalEthV2BeaconBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_AdditionalEthV2BeaconBlockData.ProtoReflect.Descriptor instead.
func (*ClientMeta_AdditionalEthV2BeaconBlockData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 16}
}

func (x *ClientMeta_AdditionalEthV2BeaconBlockData) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV2BeaconBlockData) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClientMeta_AdditionalEthV2BeaconBlockData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ClientMeta_Ethereum_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the network.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ID is the network ID of the network.
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClientMeta_Ethereum_Network) Reset() {
	*x = ClientMeta_Ethereum_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_Ethereum_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_Ethereum_Network) ProtoMessage() {}

func (x *ClientMeta_Ethereum_Network) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_Ethereum_Network.ProtoReflect.Descriptor instead.
func (*ClientMeta_Ethereum_Network) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *ClientMeta_Ethereum_Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientMeta_Ethereum_Network) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ClientMeta_Ethereum_Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ForkID is the fork ID of the execution client.
	ForkId *ForkID `protobuf:"bytes,1,opt,name=fork_id,proto3" json:"fork_id,omitempty"`
}

func (x *ClientMeta_Ethereum_Execution) Reset() {
	*x = ClientMeta_Ethereum_Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_Ethereum_Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_Ethereum_Execution) ProtoMessage() {}

func (x *ClientMeta_Ethereum_Execution) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_Ethereum_Execution.ProtoReflect.Descriptor instead.
func (*ClientMeta_Ethereum_Execution) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *ClientMeta_Ethereum_Execution) GetForkId() *ForkID {
	if x != nil {
		return x.ForkId
	}
	return nil
}

type ClientMeta_Ethereum_Consensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Implementation is the name of the consensus client.
	Implementation string `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	// Version is the version of the consensus client.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ClientMeta_Ethereum_Consensus) Reset() {
	*x = ClientMeta_Ethereum_Consensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMeta_Ethereum_Consensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMeta_Ethereum_Consensus) ProtoMessage() {}

func (x *ClientMeta_Ethereum_Consensus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMeta_Ethereum_Consensus.ProtoReflect.Descriptor instead.
func (*ClientMeta_Ethereum_Consensus) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{6, 0, 2}
}

func (x *ClientMeta_Ethereum_Consensus) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

func (x *ClientMeta_Ethereum_Consensus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ServerMeta_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// DateTime is the date and time of the event as seen by the server.
	ReceivedDateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=received_date_time,proto3" json:"received_date_time,omitempty"`
}

func (x *ServerMeta_Event) Reset() {
	*x = ServerMeta_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMeta_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMeta_Event) ProtoMessage() {}

func (x *ServerMeta_Event) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMeta_Event.ProtoReflect.Descriptor instead.
func (*ServerMeta_Event) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ServerMeta_Event) GetReceivedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedDateTime
	}
	return nil
}

type ServerMeta_Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP is the ip of the client as far as the server is concerned.
	IP string `protobuf:"bytes,1,opt,name=IP,json=ip,proto3" json:"IP,omitempty"`
	// Geo contains geo information about the client as far as the server is
	// concerned.
	Geo *ServerMeta_Client_Geo `protobuf:"bytes,2,opt,name=geo,proto3" json:"geo,omitempty"`
}

func (x *ServerMeta_Client) Reset() {
	*x = ServerMeta_Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMeta_Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMeta_Client) ProtoMessage() {}

func (x *ServerMeta_Client) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMeta_Client.ProtoReflect.Descriptor instead.
func (*ServerMeta_Client) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ServerMeta_Client) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *ServerMeta_Client) GetGeo() *ServerMeta_Client_Geo {
	if x != nil {
		return x.Geo
	}
	return nil
}

type ServerMeta_Client_Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// City is the city of the client as far as the server is concerned.
	City string `protobuf:"bytes,1,opt,name=City,json=city,proto3" json:"City,omitempty"`
	// Country is the country of the client as far as the server is concerned.
	Country string `protobuf:"bytes,2,opt,name=Country,json=country,proto3" json:"Country,omitempty"`
	// CountryCode is the country code of the client as far as the server is
	// concerned.
	CountryCode string `protobuf:"bytes,3,opt,name=CountryCode,json=country_code,proto3" json:"CountryCode,omitempty"`
	// ContinentCode is the continent code of the client as far as the server
	// is concerned.
	ContinentCode string `protobuf:"bytes,4,opt,name=ContinentCode,json=continent_code,proto3" json:"ContinentCode,omitempty"`
	// Latitude is the latitude of the client as far as the server is
	// concerned.
	Latitude float64 `protobuf:"fixed64,5,opt,name=Latitude,json=latitude,proto3" json:"Latitude,omitempty"`
	// Longitude is the longitude of the client as far as the server is
	// concerned.
	Longitude float64 `protobuf:"fixed64,6,opt,name=Longitude,json=longitude,proto3" json:"Longitude,omitempty"`
	// AutonomousSystemNumber is the autonomous system number of the client as
	// far as the server is concerned.
	AutonomousSystemNumber uint32 `protobuf:"varint,7,opt,name=AutonomousSystemNumber,json=autonomous_system_number,proto3" json:"AutonomousSystemNumber,omitempty"`
	// AutonomousSystemOrganization is the autonomous system organization of
	// the client as far as the server is concerned.
	AutonomousSystemOrganization string `protobuf:"bytes,8,opt,name=AutonomousSystemOrganization,json=autonomous_system_organization,proto3" json:"AutonomousSystemOrganization,omitempty"`
}

func (x *ServerMeta_Client_Geo) Reset() {
	*x = ServerMeta_Client_Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMeta_Client_Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMeta_Client_Geo) ProtoMessage() {}

func (x *ServerMeta_Client_Geo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_xatu_event_ingester_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMeta_Client_Geo.ProtoReflect.Descriptor instead.
func (*ServerMeta_Client_Geo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP(), []int{7, 1, 0}
}

func (x *ServerMeta_Client_Geo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ServerMeta_Client_Geo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ServerMeta_Client_Geo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ServerMeta_Client_Geo) GetContinentCode() string {
	if x != nil {
		return x.ContinentCode
	}
	return ""
}

func (x *ServerMeta_Client_Geo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ServerMeta_Client_Geo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ServerMeta_Client_Geo) GetAutonomousSystemNumber() uint32 {
	if x != nil {
		return x.AutonomousSystemNumber
	}
	return 0
}

func (x *ServerMeta_Client_Geo) GetAutonomousSystemOrganization() string {
	if x != nil {
		return x.AutonomousSystemOrganization
	}
	return ""
}

var File_pkg_proto_xatu_event_ingester_proto protoreflect.FileDescriptor

var file_pkg_proto_xatu_event_ingester_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x78, 0x61, 0x74, 0x75, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76,
	0x32, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x65, 0x0a, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x44, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x06,
	0x46, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0x37,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x22, 0xf6, 0x1f, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x72, 0x69, 0x66, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x72, 0x69, 0x66, 0x74, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x52, 0x08, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x6b, 0x0a, 0x19, 0x65,
	0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x12, 0x65, 0x74, 0x68, 0x5f,
	0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x65, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5f, 0x0a, 0x13, 0x65, 0x74, 0x68, 0x5f, 0x76,
	0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x70, 0x0a, 0x1c, 0x65, 0x74, 0x68, 0x5f,
	0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6e, 0x74,
	0x61, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45,
	0x78, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x7c, 0x0a, 0x22, 0x65, 0x74,
	0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x6a, 0x0a, 0x19, 0x65, 0x74, 0x68, 0x5f,
	0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x6f, 0x72, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x6f, 0x72, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x7f, 0x0a, 0x24, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45,
	0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x61, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5f, 0x0a, 0x13, 0x65, 0x74, 0x68, 0x5f,
	0x76, 0x32, 0x5f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x32, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x80, 0x03, 0x0a, 0x08, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x12, 0x3b, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x41, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x1a, 0x2d, 0x0a, 0x07, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x33, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x46, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x1a, 0x4d, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x49, 0x0a, 0x24, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x1a, 0x49, 0x0a, 0x24, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x45, 0x74, 0x68, 0x56, 0x31, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75,
	0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x1a, 0xbc, 0x02,
	0x0a, 0x24, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56,
	0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x97, 0x01, 0x0a,
	0x1d, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x98, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x4b, 0x0a, 0x26, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45,
	0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74,
	0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x1a, 0x51,
	0x0a, 0x2c, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56,
	0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x1a, 0x9d, 0x01, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x6f, 0x72, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xb3, 0x01, 0x0a, 0x39, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9f, 0x01, 0x0a, 0x2d, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56,
	0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9e, 0x02, 0x0a, 0x12, 0x46, 0x6f,
	0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72,
	0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12,
	0x2d, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x48,
	0x0a, 0x1f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x1a, 0x6a, 0x0a, 0x22, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x44, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x27, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68, 0x56, 0x31, 0x44, 0x65, 0x62, 0x75, 0x67, 0x46,
	0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x4f, 0x72, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3b, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12,
	0x39, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0xf2, 0x01, 0x0a, 0x20, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x1a,
	0x7d, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x74, 0x68,
	0x56, 0x32, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xd7, 0x05, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4e,
	0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x53,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x1a, 0x81, 0x03, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x2d,
	0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x61,
	0x74, 0x75, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x1a, 0xb7, 0x02,
	0x0a, 0x03, 0x47, 0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6e,
	0x6f, 0x6d, 0x6f, 0x75, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d,
	0x6f, 0x75, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x44, 0x0a, 0x1c, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x6f, 0x75, 0x73, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d,
	0x6f, 0x75, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x41, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x04, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xdb, 0x04, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xf1, 0x03, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x45, 0x41,
	0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x22, 0x0a, 0x1e, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45, 0x54,
	0x48, 0x5f, 0x56, 0x31, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50,
	0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f,
	0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x4f, 0x52, 0x47, 0x10, 0x02, 0x12, 0x31, 0x0a,
	0x2d, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f,
	0x56, 0x31, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49,
	0x5a, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45,
	0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x10, 0x04, 0x12, 0x2b, 0x0a, 0x27, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50,
	0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f,
	0x56, 0x4f, 0x4c, 0x55, 0x4e, 0x54, 0x41, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x05,
	0x12, 0x28, 0x0a, 0x24, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45,
	0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x41, 0x54, 0x54,
	0x45, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x33, 0x0a, 0x2f, 0x42, 0x45,
	0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x10, 0x07, 0x12,
	0x17, 0x0a, 0x13, 0x4d, 0x45, 0x4d, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x45, 0x41, 0x43,
	0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56, 0x32, 0x5f, 0x42, 0x45,
	0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x09, 0x12, 0x27, 0x0a, 0x23,
	0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56,
	0x31, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x48, 0x4f,
	0x49, 0x43, 0x45, 0x10, 0x0a, 0x12, 0x2d, 0x0a, 0x29, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x5f,
	0x41, 0x50, 0x49, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x56, 0x31, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47,
	0x5f, 0x46, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x48, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x4f,
	0x52, 0x47, 0x10, 0x0b, 0x22, 0xce, 0x05, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x19, 0x65, 0x74,
	0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3c, 0x0a, 0x13, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a,
	0x19, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6f, 0x72, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x6f, 0x72, 0x67, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x22, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x31,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3a, 0x0a, 0x12, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a,
	0x1c, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79,
	0x45, 0x78, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x24,
	0x65, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x78, 0x61, 0x74,
	0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x13, 0x6d, 0x65,
	0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3c, 0x0a, 0x13, 0x65, 0x74, 0x68, 0x5f, 0x76, 0x32, 0x5f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78,
	0x61, 0x74, 0x75, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x58, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x78, 0x61, 0x74, 0x75, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74,
	0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_xatu_event_ingester_proto_rawDescOnce sync.Once
	file_pkg_proto_xatu_event_ingester_proto_rawDescData = file_pkg_proto_xatu_event_ingester_proto_rawDesc
)

func file_pkg_proto_xatu_event_ingester_proto_rawDescGZIP() []byte {
	file_pkg_proto_xatu_event_ingester_proto_rawDescOnce.Do(func() {
		file_pkg_proto_xatu_event_ingester_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_xatu_event_ingester_proto_rawDescData)
	})
	return file_pkg_proto_xatu_event_ingester_proto_rawDescData
}

var file_pkg_proto_xatu_event_ingester_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_proto_xatu_event_ingester_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_pkg_proto_xatu_event_ingester_proto_goTypes = []interface{}{
	(Event_Name)(0),              // 0: xatu.Event.Name
	(*CreateEventsRequest)(nil),  // 1: xatu.CreateEventsRequest
	(*CreateEventsResponse)(nil), // 2: xatu.CreateEventsResponse
	(*Epoch)(nil),                // 3: xatu.Epoch
	(*Slot)(nil),                 // 4: xatu.Slot
	(*ForkID)(nil),               // 5: xatu.ForkID
	(*Propagation)(nil),          // 6: xatu.Propagation
	(*ClientMeta)(nil),           // 7: xatu.ClientMeta
	(*ServerMeta)(nil),           // 8: xatu.ServerMeta
	(*Meta)(nil),                 // 9: xatu.Meta
	(*Event)(nil),                // 10: xatu.Event
	(*DecoratedEvent)(nil),       // 11: xatu.DecoratedEvent
	(*ClientMeta_Ethereum)(nil),  // 12: xatu.ClientMeta.Ethereum
	nil,                          // 13: xatu.ClientMeta.LabelsEntry
	(*ClientMeta_AdditionalEthV1AttestationSourceData)(nil),                      // 14: xatu.ClientMeta.AdditionalEthV1AttestationSourceData
	(*ClientMeta_AdditionalEthV1AttestationTargetData)(nil),                      // 15: xatu.ClientMeta.AdditionalEthV1AttestationTargetData
	(*ClientMeta_AdditionalEthV1EventsAttestationData)(nil),                      // 16: xatu.ClientMeta.AdditionalEthV1EventsAttestationData
	(*ClientMeta_AdditionalEthV1EventsHeadData)(nil),                             // 17: xatu.ClientMeta.AdditionalEthV1EventsHeadData
	(*ClientMeta_AdditionalEthV1EventsBlockData)(nil),                            // 18: xatu.ClientMeta.AdditionalEthV1EventsBlockData
	(*ClientMeta_AdditionalEthV1EventsVoluntaryExitData)(nil),                    // 19: xatu.ClientMeta.AdditionalEthV1EventsVoluntaryExitData
	(*ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData)(nil),              // 20: xatu.ClientMeta.AdditionalEthV1EventsFinalizedCheckpointData
	(*ClientMeta_AdditionalEthV1EventsChainReorgData)(nil),                       // 21: xatu.ClientMeta.AdditionalEthV1EventsChainReorgData
	(*ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData)(nil), // 22: xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofContributionData
	(*ClientMeta_AdditionalEthV1EventsContributionAndProofData)(nil),             // 23: xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofData
	(*ClientMeta_ForkChoiceSnapshot)(nil),                                        // 24: xatu.ClientMeta.ForkChoiceSnapshot
	(*ClientMeta_AdditionalEthV1DebugForkChoiceData)(nil),                        // 25: xatu.ClientMeta.AdditionalEthV1DebugForkChoiceData
	(*ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData)(nil),                   // 26: xatu.ClientMeta.AdditionalEthV1DebugForkChoiceReOrgData
	(*ClientMeta_AdditionalMempoolTransactionData)(nil),                          // 27: xatu.ClientMeta.AdditionalMempoolTransactionData
	(*ClientMeta_AdditionalEthV2BeaconBlockData)(nil),                            // 28: xatu.ClientMeta.AdditionalEthV2BeaconBlockData
	(*ClientMeta_Ethereum_Network)(nil),                                          // 29: xatu.ClientMeta.Ethereum.Network
	(*ClientMeta_Ethereum_Execution)(nil),                                        // 30: xatu.ClientMeta.Ethereum.Execution
	(*ClientMeta_Ethereum_Consensus)(nil),                                        // 31: xatu.ClientMeta.Ethereum.Consensus
	(*ServerMeta_Event)(nil),                                                     // 32: xatu.ServerMeta.Event
	(*ServerMeta_Client)(nil),                                                    // 33: xatu.ServerMeta.Client
	nil,                                                                          // 34: xatu.ServerMeta.AdditionalDataEntry
	(*ServerMeta_Client_Geo)(nil),                                                // 35: xatu.ServerMeta.Client.Geo
	(*timestamppb.Timestamp)(nil),                                                // 36: google.protobuf.Timestamp
	(*v1.Attestation)(nil),                                                       // 37: xatu.eth.v1.Attestation
	(*v1.EventBlock)(nil),                                                        // 38: xatu.eth.v1.EventBlock
	(*v1.EventChainReorg)(nil),                                                   // 39: xatu.eth.v1.EventChainReorg
	(*v1.EventFinalizedCheckpoint)(nil),                                          // 40: xatu.eth.v1.EventFinalizedCheckpoint
	(*v1.EventHead)(nil),                                                         // 41: xatu.eth.v1.EventHead
	(*v1.EventVoluntaryExit)(nil),                                                // 42: xatu.eth.v1.EventVoluntaryExit
	(*v1.EventContributionAndProof)(nil),                                         // 43: xatu.eth.v1.EventContributionAndProof
	(*v2.EventBlock)(nil),                                                        // 44: xatu.eth.v2.EventBlock
	(*v1.ForkChoice)(nil),                                                        // 45: xatu.eth.v1.ForkChoice
}
var file_pkg_proto_xatu_event_ingester_proto_depIdxs = []int32{
	11, // 0: xatu.CreateEventsRequest.events:type_name -> xatu.DecoratedEvent
	36, // 1: xatu.Epoch.start_date_time:type_name -> google.protobuf.Timestamp
	36, // 2: xatu.Slot.start_date_time:type_name -> google.protobuf.Timestamp
	12, // 3: xatu.ClientMeta.ethereum:type_name -> xatu.ClientMeta.Ethereum
	13, // 4: xatu.ClientMeta.labels:type_name -> xatu.ClientMeta.LabelsEntry
	16, // 5: xatu.ClientMeta.eth_v1_events_attestation:type_name -> xatu.ClientMeta.AdditionalEthV1EventsAttestationData
	17, // 6: xatu.ClientMeta.eth_v1_events_head:type_name -> xatu.ClientMeta.AdditionalEthV1EventsHeadData
	18, // 7: xatu.ClientMeta.eth_v1_events_block:type_name -> xatu.ClientMeta.AdditionalEthV1EventsBlockData
	19, // 8: xatu.ClientMeta.eth_v1_events_voluntary_exit:type_name -> xatu.ClientMeta.AdditionalEthV1EventsVoluntaryExitData
	20, // 9: xatu.ClientMeta.eth_v1_events_finalized_checkpoint:type_name -> xatu.ClientMeta.AdditionalEthV1EventsFinalizedCheckpointData
	21, // 10: xatu.ClientMeta.eth_v1_events_chain_reorg:type_name -> xatu.ClientMeta.AdditionalEthV1EventsChainReorgData
	23, // 11: xatu.ClientMeta.eth_v1_events_contribution_and_proof:type_name -> xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofData
	27, // 12: xatu.ClientMeta.mempool_transaction:type_name -> xatu.ClientMeta.AdditionalMempoolTransactionData
	28, // 13: xatu.ClientMeta.eth_v2_beacon_block:type_name -> xatu.ClientMeta.AdditionalEthV2BeaconBlockData
	32, // 14: xatu.ServerMeta.event:type_name -> xatu.ServerMeta.Event
	33, // 15: xatu.ServerMeta.client:type_name -> xatu.ServerMeta.Client
	34, // 16: xatu.ServerMeta.additional_data:type_name -> xatu.ServerMeta.AdditionalDataEntry
	7,  // 17: xatu.Meta.client:type_name -> xatu.ClientMeta
	8,  // 18: xatu.Meta.server:type_name -> xatu.ServerMeta
	0,  // 19: xatu.Event.name:type_name -> xatu.Event.Name
	36, // 20: xatu.Event.date_time:type_name -> google.protobuf.Timestamp
	10, // 21: xatu.DecoratedEvent.event:type_name -> xatu.Event
	9,  // 22: xatu.DecoratedEvent.meta:type_name -> xatu.Meta
	37, // 23: xatu.DecoratedEvent.eth_v1_events_attestation:type_name -> xatu.eth.v1.Attestation
	38, // 24: xatu.DecoratedEvent.eth_v1_events_block:type_name -> xatu.eth.v1.EventBlock
	39, // 25: xatu.DecoratedEvent.eth_v1_events_chain_reorg:type_name -> xatu.eth.v1.EventChainReorg
	40, // 26: xatu.DecoratedEvent.eth_v1_events_finalized_checkpoint:type_name -> xatu.eth.v1.EventFinalizedCheckpoint
	41, // 27: xatu.DecoratedEvent.eth_v1_events_head:type_name -> xatu.eth.v1.EventHead
	42, // 28: xatu.DecoratedEvent.eth_v1_events_voluntary_exit:type_name -> xatu.eth.v1.EventVoluntaryExit
	43, // 29: xatu.DecoratedEvent.eth_v1_events_contribution_and_proof:type_name -> xatu.eth.v1.EventContributionAndProof
	44, // 30: xatu.DecoratedEvent.eth_v2_beacon_block:type_name -> xatu.eth.v2.EventBlock
	29, // 31: xatu.ClientMeta.Ethereum.network:type_name -> xatu.ClientMeta.Ethereum.Network
	30, // 32: xatu.ClientMeta.Ethereum.execution:type_name -> xatu.ClientMeta.Ethereum.Execution
	31, // 33: xatu.ClientMeta.Ethereum.consensus:type_name -> xatu.ClientMeta.Ethereum.Consensus
	3,  // 34: xatu.ClientMeta.AdditionalEthV1AttestationSourceData.epoch:type_name -> xatu.Epoch
	3,  // 35: xatu.ClientMeta.AdditionalEthV1AttestationTargetData.epoch:type_name -> xatu.Epoch
	14, // 36: xatu.ClientMeta.AdditionalEthV1EventsAttestationData.source:type_name -> xatu.ClientMeta.AdditionalEthV1AttestationSourceData
	15, // 37: xatu.ClientMeta.AdditionalEthV1EventsAttestationData.target:type_name -> xatu.ClientMeta.AdditionalEthV1AttestationTargetData
	4,  // 38: xatu.ClientMeta.AdditionalEthV1EventsAttestationData.slot:type_name -> xatu.Slot
	3,  // 39: xatu.ClientMeta.AdditionalEthV1EventsAttestationData.epoch:type_name -> xatu.Epoch
	6,  // 40: xatu.ClientMeta.AdditionalEthV1EventsAttestationData.propagation:type_name -> xatu.Propagation
	3,  // 41: xatu.ClientMeta.AdditionalEthV1EventsHeadData.epoch:type_name -> xatu.Epoch
	4,  // 42: xatu.ClientMeta.AdditionalEthV1EventsHeadData.slot:type_name -> xatu.Slot
	6,  // 43: xatu.ClientMeta.AdditionalEthV1EventsHeadData.propagation:type_name -> xatu.Propagation
	3,  // 44: xatu.ClientMeta.AdditionalEthV1EventsBlockData.epoch:type_name -> xatu.Epoch
	4,  // 45: xatu.ClientMeta.AdditionalEthV1EventsBlockData.slot:type_name -> xatu.Slot
	6,  // 46: xatu.ClientMeta.AdditionalEthV1EventsBlockData.propagation:type_name -> xatu.Propagation
	3,  // 47: xatu.ClientMeta.AdditionalEthV1EventsVoluntaryExitData.epoch:type_name -> xatu.Epoch
	3,  // 48: xatu.ClientMeta.AdditionalEthV1EventsFinalizedCheckpointData.epoch:type_name -> xatu.Epoch
	3,  // 49: xatu.ClientMeta.AdditionalEthV1EventsChainReorgData.epoch:type_name -> xatu.Epoch
	4,  // 50: xatu.ClientMeta.AdditionalEthV1EventsChainReorgData.slot:type_name -> xatu.Slot
	6,  // 51: xatu.ClientMeta.AdditionalEthV1EventsChainReorgData.propagation:type_name -> xatu.Propagation
	3,  // 52: xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofContributionData.epoch:type_name -> xatu.Epoch
	4,  // 53: xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofContributionData.slot:type_name -> xatu.Slot
	6,  // 54: xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofContributionData.propagation:type_name -> xatu.Propagation
	22, // 55: xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofData.contribution:type_name -> xatu.ClientMeta.AdditionalEthV1EventsContributionAndProofContributionData
	45, // 56: xatu.ClientMeta.ForkChoiceSnapshot.data:type_name -> xatu.eth.v1.ForkChoice
	3,  // 57: xatu.ClientMeta.ForkChoiceSnapshot.request_epoch:type_name -> xatu.Epoch
	4,  // 58: xatu.ClientMeta.ForkChoiceSnapshot.request_slot:type_name -> xatu.Slot
	24, // 59: xatu.ClientMeta.AdditionalEthV1DebugForkChoiceData.fork_choice:type_name -> xatu.ClientMeta.ForkChoiceSnapshot
	24, // 60: xatu.ClientMeta.AdditionalEthV1DebugForkChoiceReOrgData.before:type_name -> xatu.ClientMeta.ForkChoiceSnapshot
	24, // 61: xatu.ClientMeta.AdditionalEthV1DebugForkChoiceReOrgData.after:type_name -> xatu.ClientMeta.ForkChoiceSnapshot
	3,  // 62: xatu.ClientMeta.AdditionalEthV2BeaconBlockData.epoch:type_name -> xatu.Epoch
	4,  // 63: xatu.ClientMeta.AdditionalEthV2BeaconBlockData.slot:type_name -> xatu.Slot
	5,  // 64: xatu.ClientMeta.Ethereum.Execution.fork_id:type_name -> xatu.ForkID
	36, // 65: xatu.ServerMeta.Event.received_date_time:type_name -> google.protobuf.Timestamp
	35, // 66: xatu.ServerMeta.Client.geo:type_name -> xatu.ServerMeta.Client.Geo
	1,  // 67: xatu.EventIngester.CreateEvents:input_type -> xatu.CreateEventsRequest
	2,  // 68: xatu.EventIngester.CreateEvents:output_type -> xatu.CreateEventsResponse
	68, // [68:69] is the sub-list for method output_type
	67, // [67:68] is the sub-list for method input_type
	67, // [67:67] is the sub-list for extension type_name
	67, // [67:67] is the sub-list for extension extendee
	0,  // [0:67] is the sub-list for field type_name
}

func init() { file_pkg_proto_xatu_event_ingester_proto_init() }
func file_pkg_proto_xatu_event_ingester_proto_init() {
	if File_pkg_proto_xatu_event_ingester_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Epoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Propagation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecoratedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_Ethereum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1AttestationSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1AttestationTargetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsAttestationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsHeadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsVoluntaryExitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsFinalizedCheckpointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsChainReorgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsContributionAndProofContributionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1EventsContributionAndProofData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_ForkChoiceSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1DebugForkChoiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV1DebugForkChoiceReOrgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalMempoolTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_AdditionalEthV2BeaconBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_Ethereum_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_Ethereum_Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMeta_Ethereum_Consensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMeta_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMeta_Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_xatu_event_ingester_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMeta_Client_Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_proto_xatu_event_ingester_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ClientMeta_EthV1EventsAttestation)(nil),
		(*ClientMeta_EthV1EventsHead)(nil),
		(*ClientMeta_EthV1EventsBlock)(nil),
		(*ClientMeta_EthV1EventsVoluntaryExit)(nil),
		(*ClientMeta_EthV1EventsFinalizedCheckpoint)(nil),
		(*ClientMeta_EthV1EventsChainReorg)(nil),
		(*ClientMeta_EthV1EventsContributionAndProof)(nil),
		(*ClientMeta_MempoolTransaction)(nil),
		(*ClientMeta_EthV2BeaconBlock)(nil),
	}
	file_pkg_proto_xatu_event_ingester_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*DecoratedEvent_EthV1EventsAttestation)(nil),
		(*DecoratedEvent_EthV1EventsBlock)(nil),
		(*DecoratedEvent_EthV1EventsChainReorg)(nil),
		(*DecoratedEvent_EthV1EventsFinalizedCheckpoint)(nil),
		(*DecoratedEvent_EthV1EventsHead)(nil),
		(*DecoratedEvent_EthV1EventsVoluntaryExit)(nil),
		(*DecoratedEvent_EthV1EventsContributionAndProof)(nil),
		(*DecoratedEvent_MempoolTransaction)(nil),
		(*DecoratedEvent_EthV2BeaconBlock)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_xatu_event_ingester_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_xatu_event_ingester_proto_goTypes,
		DependencyIndexes: file_pkg_proto_xatu_event_ingester_proto_depIdxs,
		EnumInfos:         file_pkg_proto_xatu_event_ingester_proto_enumTypes,
		MessageInfos:      file_pkg_proto_xatu_event_ingester_proto_msgTypes,
	}.Build()
	File_pkg_proto_xatu_event_ingester_proto = out.File
	file_pkg_proto_xatu_event_ingester_proto_rawDesc = nil
	file_pkg_proto_xatu_event_ingester_proto_goTypes = nil
	file_pkg_proto_xatu_event_ingester_proto_depIdxs = nil
}
